
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `progresolectura` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model progresolectura
 * 
 */
export type progresolecturaModel = runtime.Types.Result.DefaultSelection<Prisma.$progresolecturaPayload>

export type AggregateProgresolectura = {
  _count: ProgresolecturaCountAggregateOutputType | null
  _avg: ProgresolecturaAvgAggregateOutputType | null
  _sum: ProgresolecturaSumAggregateOutputType | null
  _min: ProgresolecturaMinAggregateOutputType | null
  _max: ProgresolecturaMaxAggregateOutputType | null
}

export type ProgresolecturaAvgAggregateOutputType = {
  idProgreso: number | null
  idUsuario: number | null
  idCuento: number | null
  ultimaPaginaLeida: number | null
}

export type ProgresolecturaSumAggregateOutputType = {
  idProgreso: number | null
  idUsuario: number | null
  idCuento: number | null
  ultimaPaginaLeida: number | null
}

export type ProgresolecturaMinAggregateOutputType = {
  idProgreso: number | null
  idUsuario: number | null
  idCuento: number | null
  ultimaPaginaLeida: number | null
  completado: boolean | null
  fechaActualizacion: Date | null
}

export type ProgresolecturaMaxAggregateOutputType = {
  idProgreso: number | null
  idUsuario: number | null
  idCuento: number | null
  ultimaPaginaLeida: number | null
  completado: boolean | null
  fechaActualizacion: Date | null
}

export type ProgresolecturaCountAggregateOutputType = {
  idProgreso: number
  idUsuario: number
  idCuento: number
  ultimaPaginaLeida: number
  completado: number
  fechaActualizacion: number
  _all: number
}


export type ProgresolecturaAvgAggregateInputType = {
  idProgreso?: true
  idUsuario?: true
  idCuento?: true
  ultimaPaginaLeida?: true
}

export type ProgresolecturaSumAggregateInputType = {
  idProgreso?: true
  idUsuario?: true
  idCuento?: true
  ultimaPaginaLeida?: true
}

export type ProgresolecturaMinAggregateInputType = {
  idProgreso?: true
  idUsuario?: true
  idCuento?: true
  ultimaPaginaLeida?: true
  completado?: true
  fechaActualizacion?: true
}

export type ProgresolecturaMaxAggregateInputType = {
  idProgreso?: true
  idUsuario?: true
  idCuento?: true
  ultimaPaginaLeida?: true
  completado?: true
  fechaActualizacion?: true
}

export type ProgresolecturaCountAggregateInputType = {
  idProgreso?: true
  idUsuario?: true
  idCuento?: true
  ultimaPaginaLeida?: true
  completado?: true
  fechaActualizacion?: true
  _all?: true
}

export type ProgresolecturaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which progresolectura to aggregate.
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of progresolecturas to fetch.
   */
  orderBy?: Prisma.progresolecturaOrderByWithRelationInput | Prisma.progresolecturaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.progresolecturaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` progresolecturas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` progresolecturas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned progresolecturas
  **/
  _count?: true | ProgresolecturaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProgresolecturaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProgresolecturaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgresolecturaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgresolecturaMaxAggregateInputType
}

export type GetProgresolecturaAggregateType<T extends ProgresolecturaAggregateArgs> = {
      [P in keyof T & keyof AggregateProgresolectura]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgresolectura[P]>
    : Prisma.GetScalarType<T[P], AggregateProgresolectura[P]>
}




export type progresolecturaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.progresolecturaWhereInput
  orderBy?: Prisma.progresolecturaOrderByWithAggregationInput | Prisma.progresolecturaOrderByWithAggregationInput[]
  by: Prisma.ProgresolecturaScalarFieldEnum[] | Prisma.ProgresolecturaScalarFieldEnum
  having?: Prisma.progresolecturaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgresolecturaCountAggregateInputType | true
  _avg?: ProgresolecturaAvgAggregateInputType
  _sum?: ProgresolecturaSumAggregateInputType
  _min?: ProgresolecturaMinAggregateInputType
  _max?: ProgresolecturaMaxAggregateInputType
}

export type ProgresolecturaGroupByOutputType = {
  idProgreso: number
  idUsuario: number
  idCuento: number
  ultimaPaginaLeida: number | null
  completado: boolean
  fechaActualizacion: Date | null
  _count: ProgresolecturaCountAggregateOutputType | null
  _avg: ProgresolecturaAvgAggregateOutputType | null
  _sum: ProgresolecturaSumAggregateOutputType | null
  _min: ProgresolecturaMinAggregateOutputType | null
  _max: ProgresolecturaMaxAggregateOutputType | null
}

type GetProgresolecturaGroupByPayload<T extends progresolecturaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgresolecturaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgresolecturaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgresolecturaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgresolecturaGroupByOutputType[P]>
      }
    >
  >



export type progresolecturaWhereInput = {
  AND?: Prisma.progresolecturaWhereInput | Prisma.progresolecturaWhereInput[]
  OR?: Prisma.progresolecturaWhereInput[]
  NOT?: Prisma.progresolecturaWhereInput | Prisma.progresolecturaWhereInput[]
  idProgreso?: Prisma.IntFilter<"progresolectura"> | number
  idUsuario?: Prisma.IntFilter<"progresolectura"> | number
  idCuento?: Prisma.IntFilter<"progresolectura"> | number
  ultimaPaginaLeida?: Prisma.IntNullableFilter<"progresolectura"> | number | null
  completado?: Prisma.BoolFilter<"progresolectura"> | boolean
  fechaActualizacion?: Prisma.DateTimeNullableFilter<"progresolectura"> | Date | string | null
}

export type progresolecturaOrderByWithRelationInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrderInput | Prisma.SortOrder
  completado?: Prisma.SortOrder
  fechaActualizacion?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type progresolecturaWhereUniqueInput = Prisma.AtLeast<{
  idProgreso?: number
  idUsuario_idCuento?: Prisma.progresolecturaIdUsuarioIdCuentoCompoundUniqueInput
  AND?: Prisma.progresolecturaWhereInput | Prisma.progresolecturaWhereInput[]
  OR?: Prisma.progresolecturaWhereInput[]
  NOT?: Prisma.progresolecturaWhereInput | Prisma.progresolecturaWhereInput[]
  idUsuario?: Prisma.IntFilter<"progresolectura"> | number
  idCuento?: Prisma.IntFilter<"progresolectura"> | number
  ultimaPaginaLeida?: Prisma.IntNullableFilter<"progresolectura"> | number | null
  completado?: Prisma.BoolFilter<"progresolectura"> | boolean
  fechaActualizacion?: Prisma.DateTimeNullableFilter<"progresolectura"> | Date | string | null
}, "idProgreso" | "idUsuario_idCuento">

export type progresolecturaOrderByWithAggregationInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrderInput | Prisma.SortOrder
  completado?: Prisma.SortOrder
  fechaActualizacion?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.progresolecturaCountOrderByAggregateInput
  _avg?: Prisma.progresolecturaAvgOrderByAggregateInput
  _max?: Prisma.progresolecturaMaxOrderByAggregateInput
  _min?: Prisma.progresolecturaMinOrderByAggregateInput
  _sum?: Prisma.progresolecturaSumOrderByAggregateInput
}

export type progresolecturaScalarWhereWithAggregatesInput = {
  AND?: Prisma.progresolecturaScalarWhereWithAggregatesInput | Prisma.progresolecturaScalarWhereWithAggregatesInput[]
  OR?: Prisma.progresolecturaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.progresolecturaScalarWhereWithAggregatesInput | Prisma.progresolecturaScalarWhereWithAggregatesInput[]
  idProgreso?: Prisma.IntWithAggregatesFilter<"progresolectura"> | number
  idUsuario?: Prisma.IntWithAggregatesFilter<"progresolectura"> | number
  idCuento?: Prisma.IntWithAggregatesFilter<"progresolectura"> | number
  ultimaPaginaLeida?: Prisma.IntNullableWithAggregatesFilter<"progresolectura"> | number | null
  completado?: Prisma.BoolWithAggregatesFilter<"progresolectura"> | boolean
  fechaActualizacion?: Prisma.DateTimeNullableWithAggregatesFilter<"progresolectura"> | Date | string | null
}

export type progresolecturaCreateInput = {
  idUsuario: number
  idCuento: number
  ultimaPaginaLeida?: number | null
  completado?: boolean
  fechaActualizacion?: Date | string | null
}

export type progresolecturaUncheckedCreateInput = {
  idProgreso?: number
  idUsuario: number
  idCuento: number
  ultimaPaginaLeida?: number | null
  completado?: boolean
  fechaActualizacion?: Date | string | null
}

export type progresolecturaUpdateInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  ultimaPaginaLeida?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  completado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  fechaActualizacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type progresolecturaUncheckedUpdateInput = {
  idProgreso?: Prisma.IntFieldUpdateOperationsInput | number
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  ultimaPaginaLeida?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  completado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  fechaActualizacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type progresolecturaCreateManyInput = {
  idProgreso?: number
  idUsuario: number
  idCuento: number
  ultimaPaginaLeida?: number | null
  completado?: boolean
  fechaActualizacion?: Date | string | null
}

export type progresolecturaUpdateManyMutationInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  ultimaPaginaLeida?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  completado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  fechaActualizacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type progresolecturaUncheckedUpdateManyInput = {
  idProgreso?: Prisma.IntFieldUpdateOperationsInput | number
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  ultimaPaginaLeida?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  completado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  fechaActualizacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type progresolecturaIdUsuarioIdCuentoCompoundUniqueInput = {
  idUsuario: number
  idCuento: number
}

export type progresolecturaCountOrderByAggregateInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrder
  completado?: Prisma.SortOrder
  fechaActualizacion?: Prisma.SortOrder
}

export type progresolecturaAvgOrderByAggregateInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrder
}

export type progresolecturaMaxOrderByAggregateInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrder
  completado?: Prisma.SortOrder
  fechaActualizacion?: Prisma.SortOrder
}

export type progresolecturaMinOrderByAggregateInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrder
  completado?: Prisma.SortOrder
  fechaActualizacion?: Prisma.SortOrder
}

export type progresolecturaSumOrderByAggregateInput = {
  idProgreso?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  ultimaPaginaLeida?: Prisma.SortOrder
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}



export type progresolecturaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idProgreso?: boolean
  idUsuario?: boolean
  idCuento?: boolean
  ultimaPaginaLeida?: boolean
  completado?: boolean
  fechaActualizacion?: boolean
}, ExtArgs["result"]["progresolectura"]>



export type progresolecturaSelectScalar = {
  idProgreso?: boolean
  idUsuario?: boolean
  idCuento?: boolean
  ultimaPaginaLeida?: boolean
  completado?: boolean
  fechaActualizacion?: boolean
}

export type progresolecturaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idProgreso" | "idUsuario" | "idCuento" | "ultimaPaginaLeida" | "completado" | "fechaActualizacion", ExtArgs["result"]["progresolectura"]>

export type $progresolecturaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "progresolectura"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idProgreso: number
    idUsuario: number
    idCuento: number
    ultimaPaginaLeida: number | null
    completado: boolean
    fechaActualizacion: Date | null
  }, ExtArgs["result"]["progresolectura"]>
  composites: {}
}

export type progresolecturaGetPayload<S extends boolean | null | undefined | progresolecturaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload, S>

export type progresolecturaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<progresolecturaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgresolecturaCountAggregateInputType | true
  }

export interface progresolecturaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['progresolectura'], meta: { name: 'progresolectura' } }
  /**
   * Find zero or one Progresolectura that matches the filter.
   * @param {progresolecturaFindUniqueArgs} args - Arguments to find a Progresolectura
   * @example
   * // Get one Progresolectura
   * const progresolectura = await prisma.progresolectura.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends progresolecturaFindUniqueArgs>(args: Prisma.SelectSubset<T, progresolecturaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Progresolectura that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {progresolecturaFindUniqueOrThrowArgs} args - Arguments to find a Progresolectura
   * @example
   * // Get one Progresolectura
   * const progresolectura = await prisma.progresolectura.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends progresolecturaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, progresolecturaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Progresolectura that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaFindFirstArgs} args - Arguments to find a Progresolectura
   * @example
   * // Get one Progresolectura
   * const progresolectura = await prisma.progresolectura.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends progresolecturaFindFirstArgs>(args?: Prisma.SelectSubset<T, progresolecturaFindFirstArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Progresolectura that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaFindFirstOrThrowArgs} args - Arguments to find a Progresolectura
   * @example
   * // Get one Progresolectura
   * const progresolectura = await prisma.progresolectura.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends progresolecturaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, progresolecturaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Progresolecturas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Progresolecturas
   * const progresolecturas = await prisma.progresolectura.findMany()
   * 
   * // Get first 10 Progresolecturas
   * const progresolecturas = await prisma.progresolectura.findMany({ take: 10 })
   * 
   * // Only select the `idProgreso`
   * const progresolecturaWithIdProgresoOnly = await prisma.progresolectura.findMany({ select: { idProgreso: true } })
   * 
   */
  findMany<T extends progresolecturaFindManyArgs>(args?: Prisma.SelectSubset<T, progresolecturaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Progresolectura.
   * @param {progresolecturaCreateArgs} args - Arguments to create a Progresolectura.
   * @example
   * // Create one Progresolectura
   * const Progresolectura = await prisma.progresolectura.create({
   *   data: {
   *     // ... data to create a Progresolectura
   *   }
   * })
   * 
   */
  create<T extends progresolecturaCreateArgs>(args: Prisma.SelectSubset<T, progresolecturaCreateArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Progresolecturas.
   * @param {progresolecturaCreateManyArgs} args - Arguments to create many Progresolecturas.
   * @example
   * // Create many Progresolecturas
   * const progresolectura = await prisma.progresolectura.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends progresolecturaCreateManyArgs>(args?: Prisma.SelectSubset<T, progresolecturaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Progresolectura.
   * @param {progresolecturaDeleteArgs} args - Arguments to delete one Progresolectura.
   * @example
   * // Delete one Progresolectura
   * const Progresolectura = await prisma.progresolectura.delete({
   *   where: {
   *     // ... filter to delete one Progresolectura
   *   }
   * })
   * 
   */
  delete<T extends progresolecturaDeleteArgs>(args: Prisma.SelectSubset<T, progresolecturaDeleteArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Progresolectura.
   * @param {progresolecturaUpdateArgs} args - Arguments to update one Progresolectura.
   * @example
   * // Update one Progresolectura
   * const progresolectura = await prisma.progresolectura.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends progresolecturaUpdateArgs>(args: Prisma.SelectSubset<T, progresolecturaUpdateArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Progresolecturas.
   * @param {progresolecturaDeleteManyArgs} args - Arguments to filter Progresolecturas to delete.
   * @example
   * // Delete a few Progresolecturas
   * const { count } = await prisma.progresolectura.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends progresolecturaDeleteManyArgs>(args?: Prisma.SelectSubset<T, progresolecturaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Progresolecturas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Progresolecturas
   * const progresolectura = await prisma.progresolectura.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends progresolecturaUpdateManyArgs>(args: Prisma.SelectSubset<T, progresolecturaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Progresolectura.
   * @param {progresolecturaUpsertArgs} args - Arguments to update or create a Progresolectura.
   * @example
   * // Update or create a Progresolectura
   * const progresolectura = await prisma.progresolectura.upsert({
   *   create: {
   *     // ... data to create a Progresolectura
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Progresolectura we want to update
   *   }
   * })
   */
  upsert<T extends progresolecturaUpsertArgs>(args: Prisma.SelectSubset<T, progresolecturaUpsertArgs<ExtArgs>>): Prisma.Prisma__progresolecturaClient<runtime.Types.Result.GetResult<Prisma.$progresolecturaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Progresolecturas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaCountArgs} args - Arguments to filter Progresolecturas to count.
   * @example
   * // Count the number of Progresolecturas
   * const count = await prisma.progresolectura.count({
   *   where: {
   *     // ... the filter for the Progresolecturas we want to count
   *   }
   * })
  **/
  count<T extends progresolecturaCountArgs>(
    args?: Prisma.Subset<T, progresolecturaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgresolecturaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Progresolectura.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgresolecturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgresolecturaAggregateArgs>(args: Prisma.Subset<T, ProgresolecturaAggregateArgs>): Prisma.PrismaPromise<GetProgresolecturaAggregateType<T>>

  /**
   * Group by Progresolectura.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {progresolecturaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends progresolecturaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: progresolecturaGroupByArgs['orderBy'] }
      : { orderBy?: progresolecturaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, progresolecturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgresolecturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the progresolectura model
 */
readonly fields: progresolecturaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for progresolectura.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__progresolecturaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the progresolectura model
 */
export interface progresolecturaFieldRefs {
  readonly idProgreso: Prisma.FieldRef<"progresolectura", 'Int'>
  readonly idUsuario: Prisma.FieldRef<"progresolectura", 'Int'>
  readonly idCuento: Prisma.FieldRef<"progresolectura", 'Int'>
  readonly ultimaPaginaLeida: Prisma.FieldRef<"progresolectura", 'Int'>
  readonly completado: Prisma.FieldRef<"progresolectura", 'Boolean'>
  readonly fechaActualizacion: Prisma.FieldRef<"progresolectura", 'DateTime'>
}
    

// Custom InputTypes
/**
 * progresolectura findUnique
 */
export type progresolecturaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter, which progresolectura to fetch.
   */
  where: Prisma.progresolecturaWhereUniqueInput
}

/**
 * progresolectura findUniqueOrThrow
 */
export type progresolecturaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter, which progresolectura to fetch.
   */
  where: Prisma.progresolecturaWhereUniqueInput
}

/**
 * progresolectura findFirst
 */
export type progresolecturaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter, which progresolectura to fetch.
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of progresolecturas to fetch.
   */
  orderBy?: Prisma.progresolecturaOrderByWithRelationInput | Prisma.progresolecturaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for progresolecturas.
   */
  cursor?: Prisma.progresolecturaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` progresolecturas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` progresolecturas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of progresolecturas.
   */
  distinct?: Prisma.ProgresolecturaScalarFieldEnum | Prisma.ProgresolecturaScalarFieldEnum[]
}

/**
 * progresolectura findFirstOrThrow
 */
export type progresolecturaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter, which progresolectura to fetch.
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of progresolecturas to fetch.
   */
  orderBy?: Prisma.progresolecturaOrderByWithRelationInput | Prisma.progresolecturaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for progresolecturas.
   */
  cursor?: Prisma.progresolecturaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` progresolecturas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` progresolecturas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of progresolecturas.
   */
  distinct?: Prisma.ProgresolecturaScalarFieldEnum | Prisma.ProgresolecturaScalarFieldEnum[]
}

/**
 * progresolectura findMany
 */
export type progresolecturaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter, which progresolecturas to fetch.
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of progresolecturas to fetch.
   */
  orderBy?: Prisma.progresolecturaOrderByWithRelationInput | Prisma.progresolecturaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing progresolecturas.
   */
  cursor?: Prisma.progresolecturaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` progresolecturas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` progresolecturas.
   */
  skip?: number
  distinct?: Prisma.ProgresolecturaScalarFieldEnum | Prisma.ProgresolecturaScalarFieldEnum[]
}

/**
 * progresolectura create
 */
export type progresolecturaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * The data needed to create a progresolectura.
   */
  data: Prisma.XOR<Prisma.progresolecturaCreateInput, Prisma.progresolecturaUncheckedCreateInput>
}

/**
 * progresolectura createMany
 */
export type progresolecturaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many progresolecturas.
   */
  data: Prisma.progresolecturaCreateManyInput | Prisma.progresolecturaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * progresolectura update
 */
export type progresolecturaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * The data needed to update a progresolectura.
   */
  data: Prisma.XOR<Prisma.progresolecturaUpdateInput, Prisma.progresolecturaUncheckedUpdateInput>
  /**
   * Choose, which progresolectura to update.
   */
  where: Prisma.progresolecturaWhereUniqueInput
}

/**
 * progresolectura updateMany
 */
export type progresolecturaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update progresolecturas.
   */
  data: Prisma.XOR<Prisma.progresolecturaUpdateManyMutationInput, Prisma.progresolecturaUncheckedUpdateManyInput>
  /**
   * Filter which progresolecturas to update
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * Limit how many progresolecturas to update.
   */
  limit?: number
}

/**
 * progresolectura upsert
 */
export type progresolecturaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * The filter to search for the progresolectura to update in case it exists.
   */
  where: Prisma.progresolecturaWhereUniqueInput
  /**
   * In case the progresolectura found by the `where` argument doesn't exist, create a new progresolectura with this data.
   */
  create: Prisma.XOR<Prisma.progresolecturaCreateInput, Prisma.progresolecturaUncheckedCreateInput>
  /**
   * In case the progresolectura was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.progresolecturaUpdateInput, Prisma.progresolecturaUncheckedUpdateInput>
}

/**
 * progresolectura delete
 */
export type progresolecturaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
  /**
   * Filter which progresolectura to delete.
   */
  where: Prisma.progresolecturaWhereUniqueInput
}

/**
 * progresolectura deleteMany
 */
export type progresolecturaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which progresolecturas to delete
   */
  where?: Prisma.progresolecturaWhereInput
  /**
   * Limit how many progresolecturas to delete.
   */
  limit?: number
}

/**
 * progresolectura without action
 */
export type progresolecturaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the progresolectura
   */
  select?: Prisma.progresolecturaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the progresolectura
   */
  omit?: Prisma.progresolecturaOmit<ExtArgs> | null
}
