
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `cuentos` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model cuentos
 * 
 */
export type cuentosModel = runtime.Types.Result.DefaultSelection<Prisma.$cuentosPayload>

export type AggregateCuentos = {
  _count: CuentosCountAggregateOutputType | null
  _avg: CuentosAvgAggregateOutputType | null
  _sum: CuentosSumAggregateOutputType | null
  _min: CuentosMinAggregateOutputType | null
  _max: CuentosMaxAggregateOutputType | null
}

export type CuentosAvgAggregateOutputType = {
  idCuento: number | null
  edadRecomentada: number | null
}

export type CuentosSumAggregateOutputType = {
  idCuento: number | null
  edadRecomentada: number | null
}

export type CuentosMinAggregateOutputType = {
  idCuento: number | null
  tituloCuento: string | null
  descripcion: string | null
  urlPortada: string | null
  edadRecomentada: number | null
  fechaPublicacion: Date | null
}

export type CuentosMaxAggregateOutputType = {
  idCuento: number | null
  tituloCuento: string | null
  descripcion: string | null
  urlPortada: string | null
  edadRecomentada: number | null
  fechaPublicacion: Date | null
}

export type CuentosCountAggregateOutputType = {
  idCuento: number
  tituloCuento: number
  descripcion: number
  urlPortada: number
  edadRecomentada: number
  fechaPublicacion: number
  _all: number
}


export type CuentosAvgAggregateInputType = {
  idCuento?: true
  edadRecomentada?: true
}

export type CuentosSumAggregateInputType = {
  idCuento?: true
  edadRecomentada?: true
}

export type CuentosMinAggregateInputType = {
  idCuento?: true
  tituloCuento?: true
  descripcion?: true
  urlPortada?: true
  edadRecomentada?: true
  fechaPublicacion?: true
}

export type CuentosMaxAggregateInputType = {
  idCuento?: true
  tituloCuento?: true
  descripcion?: true
  urlPortada?: true
  edadRecomentada?: true
  fechaPublicacion?: true
}

export type CuentosCountAggregateInputType = {
  idCuento?: true
  tituloCuento?: true
  descripcion?: true
  urlPortada?: true
  edadRecomentada?: true
  fechaPublicacion?: true
  _all?: true
}

export type CuentosAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cuentos to aggregate.
   */
  where?: Prisma.cuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cuentos to fetch.
   */
  orderBy?: Prisma.cuentosOrderByWithRelationInput | Prisma.cuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.cuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned cuentos
  **/
  _count?: true | CuentosCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: CuentosAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: CuentosSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: CuentosMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: CuentosMaxAggregateInputType
}

export type GetCuentosAggregateType<T extends CuentosAggregateArgs> = {
      [P in keyof T & keyof AggregateCuentos]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCuentos[P]>
    : Prisma.GetScalarType<T[P], AggregateCuentos[P]>
}




export type cuentosGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.cuentosWhereInput
  orderBy?: Prisma.cuentosOrderByWithAggregationInput | Prisma.cuentosOrderByWithAggregationInput[]
  by: Prisma.CuentosScalarFieldEnum[] | Prisma.CuentosScalarFieldEnum
  having?: Prisma.cuentosScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: CuentosCountAggregateInputType | true
  _avg?: CuentosAvgAggregateInputType
  _sum?: CuentosSumAggregateInputType
  _min?: CuentosMinAggregateInputType
  _max?: CuentosMaxAggregateInputType
}

export type CuentosGroupByOutputType = {
  idCuento: number
  tituloCuento: string
  descripcion: string | null
  urlPortada: string | null
  edadRecomentada: number | null
  fechaPublicacion: Date | null
  _count: CuentosCountAggregateOutputType | null
  _avg: CuentosAvgAggregateOutputType | null
  _sum: CuentosSumAggregateOutputType | null
  _min: CuentosMinAggregateOutputType | null
  _max: CuentosMaxAggregateOutputType | null
}

type GetCuentosGroupByPayload<T extends cuentosGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CuentosGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof CuentosGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CuentosGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CuentosGroupByOutputType[P]>
      }
    >
  >



export type cuentosWhereInput = {
  AND?: Prisma.cuentosWhereInput | Prisma.cuentosWhereInput[]
  OR?: Prisma.cuentosWhereInput[]
  NOT?: Prisma.cuentosWhereInput | Prisma.cuentosWhereInput[]
  idCuento?: Prisma.IntFilter<"cuentos"> | number
  tituloCuento?: Prisma.StringFilter<"cuentos"> | string
  descripcion?: Prisma.StringNullableFilter<"cuentos"> | string | null
  urlPortada?: Prisma.StringNullableFilter<"cuentos"> | string | null
  edadRecomentada?: Prisma.IntNullableFilter<"cuentos"> | number | null
  fechaPublicacion?: Prisma.DateTimeNullableFilter<"cuentos"> | Date | string | null
}

export type cuentosOrderByWithRelationInput = {
  idCuento?: Prisma.SortOrder
  tituloCuento?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  urlPortada?: Prisma.SortOrderInput | Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaPublicacion?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.cuentosOrderByRelevanceInput
}

export type cuentosWhereUniqueInput = Prisma.AtLeast<{
  idCuento?: number
  AND?: Prisma.cuentosWhereInput | Prisma.cuentosWhereInput[]
  OR?: Prisma.cuentosWhereInput[]
  NOT?: Prisma.cuentosWhereInput | Prisma.cuentosWhereInput[]
  tituloCuento?: Prisma.StringFilter<"cuentos"> | string
  descripcion?: Prisma.StringNullableFilter<"cuentos"> | string | null
  urlPortada?: Prisma.StringNullableFilter<"cuentos"> | string | null
  edadRecomentada?: Prisma.IntNullableFilter<"cuentos"> | number | null
  fechaPublicacion?: Prisma.DateTimeNullableFilter<"cuentos"> | Date | string | null
}, "idCuento">

export type cuentosOrderByWithAggregationInput = {
  idCuento?: Prisma.SortOrder
  tituloCuento?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  urlPortada?: Prisma.SortOrderInput | Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaPublicacion?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.cuentosCountOrderByAggregateInput
  _avg?: Prisma.cuentosAvgOrderByAggregateInput
  _max?: Prisma.cuentosMaxOrderByAggregateInput
  _min?: Prisma.cuentosMinOrderByAggregateInput
  _sum?: Prisma.cuentosSumOrderByAggregateInput
}

export type cuentosScalarWhereWithAggregatesInput = {
  AND?: Prisma.cuentosScalarWhereWithAggregatesInput | Prisma.cuentosScalarWhereWithAggregatesInput[]
  OR?: Prisma.cuentosScalarWhereWithAggregatesInput[]
  NOT?: Prisma.cuentosScalarWhereWithAggregatesInput | Prisma.cuentosScalarWhereWithAggregatesInput[]
  idCuento?: Prisma.IntWithAggregatesFilter<"cuentos"> | number
  tituloCuento?: Prisma.StringWithAggregatesFilter<"cuentos"> | string
  descripcion?: Prisma.StringNullableWithAggregatesFilter<"cuentos"> | string | null
  urlPortada?: Prisma.StringNullableWithAggregatesFilter<"cuentos"> | string | null
  edadRecomentada?: Prisma.IntNullableWithAggregatesFilter<"cuentos"> | number | null
  fechaPublicacion?: Prisma.DateTimeNullableWithAggregatesFilter<"cuentos"> | Date | string | null
}

export type cuentosCreateInput = {
  tituloCuento: string
  descripcion?: string | null
  urlPortada?: string | null
  edadRecomentada?: number | null
  fechaPublicacion?: Date | string | null
}

export type cuentosUncheckedCreateInput = {
  idCuento?: number
  tituloCuento: string
  descripcion?: string | null
  urlPortada?: string | null
  edadRecomentada?: number | null
  fechaPublicacion?: Date | string | null
}

export type cuentosUpdateInput = {
  tituloCuento?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlPortada?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  edadRecomentada?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaPublicacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type cuentosUncheckedUpdateInput = {
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  tituloCuento?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlPortada?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  edadRecomentada?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaPublicacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type cuentosCreateManyInput = {
  idCuento?: number
  tituloCuento: string
  descripcion?: string | null
  urlPortada?: string | null
  edadRecomentada?: number | null
  fechaPublicacion?: Date | string | null
}

export type cuentosUpdateManyMutationInput = {
  tituloCuento?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlPortada?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  edadRecomentada?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaPublicacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type cuentosUncheckedUpdateManyInput = {
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  tituloCuento?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlPortada?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  edadRecomentada?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaPublicacion?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type cuentosOrderByRelevanceInput = {
  fields: Prisma.cuentosOrderByRelevanceFieldEnum | Prisma.cuentosOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type cuentosCountOrderByAggregateInput = {
  idCuento?: Prisma.SortOrder
  tituloCuento?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  urlPortada?: Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrder
  fechaPublicacion?: Prisma.SortOrder
}

export type cuentosAvgOrderByAggregateInput = {
  idCuento?: Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrder
}

export type cuentosMaxOrderByAggregateInput = {
  idCuento?: Prisma.SortOrder
  tituloCuento?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  urlPortada?: Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrder
  fechaPublicacion?: Prisma.SortOrder
}

export type cuentosMinOrderByAggregateInput = {
  idCuento?: Prisma.SortOrder
  tituloCuento?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  urlPortada?: Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrder
  fechaPublicacion?: Prisma.SortOrder
}

export type cuentosSumOrderByAggregateInput = {
  idCuento?: Prisma.SortOrder
  edadRecomentada?: Prisma.SortOrder
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}



export type cuentosSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idCuento?: boolean
  tituloCuento?: boolean
  descripcion?: boolean
  urlPortada?: boolean
  edadRecomentada?: boolean
  fechaPublicacion?: boolean
}, ExtArgs["result"]["cuentos"]>



export type cuentosSelectScalar = {
  idCuento?: boolean
  tituloCuento?: boolean
  descripcion?: boolean
  urlPortada?: boolean
  edadRecomentada?: boolean
  fechaPublicacion?: boolean
}

export type cuentosOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idCuento" | "tituloCuento" | "descripcion" | "urlPortada" | "edadRecomentada" | "fechaPublicacion", ExtArgs["result"]["cuentos"]>

export type $cuentosPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "cuentos"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idCuento: number
    tituloCuento: string
    descripcion: string | null
    urlPortada: string | null
    edadRecomentada: number | null
    fechaPublicacion: Date | null
  }, ExtArgs["result"]["cuentos"]>
  composites: {}
}

export type cuentosGetPayload<S extends boolean | null | undefined | cuentosDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$cuentosPayload, S>

export type cuentosCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<cuentosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: CuentosCountAggregateInputType | true
  }

export interface cuentosDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cuentos'], meta: { name: 'cuentos' } }
  /**
   * Find zero or one Cuentos that matches the filter.
   * @param {cuentosFindUniqueArgs} args - Arguments to find a Cuentos
   * @example
   * // Get one Cuentos
   * const cuentos = await prisma.cuentos.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends cuentosFindUniqueArgs>(args: Prisma.SelectSubset<T, cuentosFindUniqueArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Cuentos that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {cuentosFindUniqueOrThrowArgs} args - Arguments to find a Cuentos
   * @example
   * // Get one Cuentos
   * const cuentos = await prisma.cuentos.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends cuentosFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, cuentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cuentos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosFindFirstArgs} args - Arguments to find a Cuentos
   * @example
   * // Get one Cuentos
   * const cuentos = await prisma.cuentos.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends cuentosFindFirstArgs>(args?: Prisma.SelectSubset<T, cuentosFindFirstArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Cuentos that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosFindFirstOrThrowArgs} args - Arguments to find a Cuentos
   * @example
   * // Get one Cuentos
   * const cuentos = await prisma.cuentos.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends cuentosFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, cuentosFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Cuentos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Cuentos
   * const cuentos = await prisma.cuentos.findMany()
   * 
   * // Get first 10 Cuentos
   * const cuentos = await prisma.cuentos.findMany({ take: 10 })
   * 
   * // Only select the `idCuento`
   * const cuentosWithIdCuentoOnly = await prisma.cuentos.findMany({ select: { idCuento: true } })
   * 
   */
  findMany<T extends cuentosFindManyArgs>(args?: Prisma.SelectSubset<T, cuentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Cuentos.
   * @param {cuentosCreateArgs} args - Arguments to create a Cuentos.
   * @example
   * // Create one Cuentos
   * const Cuentos = await prisma.cuentos.create({
   *   data: {
   *     // ... data to create a Cuentos
   *   }
   * })
   * 
   */
  create<T extends cuentosCreateArgs>(args: Prisma.SelectSubset<T, cuentosCreateArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Cuentos.
   * @param {cuentosCreateManyArgs} args - Arguments to create many Cuentos.
   * @example
   * // Create many Cuentos
   * const cuentos = await prisma.cuentos.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends cuentosCreateManyArgs>(args?: Prisma.SelectSubset<T, cuentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Cuentos.
   * @param {cuentosDeleteArgs} args - Arguments to delete one Cuentos.
   * @example
   * // Delete one Cuentos
   * const Cuentos = await prisma.cuentos.delete({
   *   where: {
   *     // ... filter to delete one Cuentos
   *   }
   * })
   * 
   */
  delete<T extends cuentosDeleteArgs>(args: Prisma.SelectSubset<T, cuentosDeleteArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Cuentos.
   * @param {cuentosUpdateArgs} args - Arguments to update one Cuentos.
   * @example
   * // Update one Cuentos
   * const cuentos = await prisma.cuentos.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends cuentosUpdateArgs>(args: Prisma.SelectSubset<T, cuentosUpdateArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Cuentos.
   * @param {cuentosDeleteManyArgs} args - Arguments to filter Cuentos to delete.
   * @example
   * // Delete a few Cuentos
   * const { count } = await prisma.cuentos.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends cuentosDeleteManyArgs>(args?: Prisma.SelectSubset<T, cuentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Cuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Cuentos
   * const cuentos = await prisma.cuentos.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends cuentosUpdateManyArgs>(args: Prisma.SelectSubset<T, cuentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Cuentos.
   * @param {cuentosUpsertArgs} args - Arguments to update or create a Cuentos.
   * @example
   * // Update or create a Cuentos
   * const cuentos = await prisma.cuentos.upsert({
   *   create: {
   *     // ... data to create a Cuentos
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Cuentos we want to update
   *   }
   * })
   */
  upsert<T extends cuentosUpsertArgs>(args: Prisma.SelectSubset<T, cuentosUpsertArgs<ExtArgs>>): Prisma.Prisma__cuentosClient<runtime.Types.Result.GetResult<Prisma.$cuentosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Cuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosCountArgs} args - Arguments to filter Cuentos to count.
   * @example
   * // Count the number of Cuentos
   * const count = await prisma.cuentos.count({
   *   where: {
   *     // ... the filter for the Cuentos we want to count
   *   }
   * })
  **/
  count<T extends cuentosCountArgs>(
    args?: Prisma.Subset<T, cuentosCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], CuentosCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Cuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CuentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends CuentosAggregateArgs>(args: Prisma.Subset<T, CuentosAggregateArgs>): Prisma.PrismaPromise<GetCuentosAggregateType<T>>

  /**
   * Group by Cuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {cuentosGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends cuentosGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: cuentosGroupByArgs['orderBy'] }
      : { orderBy?: cuentosGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, cuentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCuentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the cuentos model
 */
readonly fields: cuentosFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for cuentos.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__cuentosClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the cuentos model
 */
export interface cuentosFieldRefs {
  readonly idCuento: Prisma.FieldRef<"cuentos", 'Int'>
  readonly tituloCuento: Prisma.FieldRef<"cuentos", 'String'>
  readonly descripcion: Prisma.FieldRef<"cuentos", 'String'>
  readonly urlPortada: Prisma.FieldRef<"cuentos", 'String'>
  readonly edadRecomentada: Prisma.FieldRef<"cuentos", 'Int'>
  readonly fechaPublicacion: Prisma.FieldRef<"cuentos", 'DateTime'>
}
    

// Custom InputTypes
/**
 * cuentos findUnique
 */
export type cuentosFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter, which cuentos to fetch.
   */
  where: Prisma.cuentosWhereUniqueInput
}

/**
 * cuentos findUniqueOrThrow
 */
export type cuentosFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter, which cuentos to fetch.
   */
  where: Prisma.cuentosWhereUniqueInput
}

/**
 * cuentos findFirst
 */
export type cuentosFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter, which cuentos to fetch.
   */
  where?: Prisma.cuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cuentos to fetch.
   */
  orderBy?: Prisma.cuentosOrderByWithRelationInput | Prisma.cuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cuentos.
   */
  cursor?: Prisma.cuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cuentos.
   */
  distinct?: Prisma.CuentosScalarFieldEnum | Prisma.CuentosScalarFieldEnum[]
}

/**
 * cuentos findFirstOrThrow
 */
export type cuentosFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter, which cuentos to fetch.
   */
  where?: Prisma.cuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cuentos to fetch.
   */
  orderBy?: Prisma.cuentosOrderByWithRelationInput | Prisma.cuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for cuentos.
   */
  cursor?: Prisma.cuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of cuentos.
   */
  distinct?: Prisma.CuentosScalarFieldEnum | Prisma.CuentosScalarFieldEnum[]
}

/**
 * cuentos findMany
 */
export type cuentosFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter, which cuentos to fetch.
   */
  where?: Prisma.cuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of cuentos to fetch.
   */
  orderBy?: Prisma.cuentosOrderByWithRelationInput | Prisma.cuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing cuentos.
   */
  cursor?: Prisma.cuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` cuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` cuentos.
   */
  skip?: number
  distinct?: Prisma.CuentosScalarFieldEnum | Prisma.CuentosScalarFieldEnum[]
}

/**
 * cuentos create
 */
export type cuentosCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * The data needed to create a cuentos.
   */
  data: Prisma.XOR<Prisma.cuentosCreateInput, Prisma.cuentosUncheckedCreateInput>
}

/**
 * cuentos createMany
 */
export type cuentosCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many cuentos.
   */
  data: Prisma.cuentosCreateManyInput | Prisma.cuentosCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * cuentos update
 */
export type cuentosUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * The data needed to update a cuentos.
   */
  data: Prisma.XOR<Prisma.cuentosUpdateInput, Prisma.cuentosUncheckedUpdateInput>
  /**
   * Choose, which cuentos to update.
   */
  where: Prisma.cuentosWhereUniqueInput
}

/**
 * cuentos updateMany
 */
export type cuentosUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update cuentos.
   */
  data: Prisma.XOR<Prisma.cuentosUpdateManyMutationInput, Prisma.cuentosUncheckedUpdateManyInput>
  /**
   * Filter which cuentos to update
   */
  where?: Prisma.cuentosWhereInput
  /**
   * Limit how many cuentos to update.
   */
  limit?: number
}

/**
 * cuentos upsert
 */
export type cuentosUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * The filter to search for the cuentos to update in case it exists.
   */
  where: Prisma.cuentosWhereUniqueInput
  /**
   * In case the cuentos found by the `where` argument doesn't exist, create a new cuentos with this data.
   */
  create: Prisma.XOR<Prisma.cuentosCreateInput, Prisma.cuentosUncheckedCreateInput>
  /**
   * In case the cuentos was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.cuentosUpdateInput, Prisma.cuentosUncheckedUpdateInput>
}

/**
 * cuentos delete
 */
export type cuentosDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
  /**
   * Filter which cuentos to delete.
   */
  where: Prisma.cuentosWhereUniqueInput
}

/**
 * cuentos deleteMany
 */
export type cuentosDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which cuentos to delete
   */
  where?: Prisma.cuentosWhereInput
  /**
   * Limit how many cuentos to delete.
   */
  limit?: number
}

/**
 * cuentos without action
 */
export type cuentosDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the cuentos
   */
  select?: Prisma.cuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the cuentos
   */
  omit?: Prisma.cuentosOmit<ExtArgs> | null
}
