
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `usuarios` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model usuarios
 * 
 */
export type usuariosModel = runtime.Types.Result.DefaultSelection<Prisma.$usuariosPayload>

export type AggregateUsuarios = {
  _count: UsuariosCountAggregateOutputType | null
  _avg: UsuariosAvgAggregateOutputType | null
  _sum: UsuariosSumAggregateOutputType | null
  _min: UsuariosMinAggregateOutputType | null
  _max: UsuariosMaxAggregateOutputType | null
}

export type UsuariosAvgAggregateOutputType = {
  idUsuario: number | null
  idAvatar: number | null
}

export type UsuariosSumAggregateOutputType = {
  idUsuario: number | null
  idAvatar: number | null
}

export type UsuariosMinAggregateOutputType = {
  idUsuario: number | null
  email: string | null
  contrase_a: string | null
  nombreTutor: string | null
  nombreInfante: string | null
  FechaNacimientoInfante: Date | null
  idAvatar: number | null
  fechaRegistro: Date | null
}

export type UsuariosMaxAggregateOutputType = {
  idUsuario: number | null
  email: string | null
  contrase_a: string | null
  nombreTutor: string | null
  nombreInfante: string | null
  FechaNacimientoInfante: Date | null
  idAvatar: number | null
  fechaRegistro: Date | null
}

export type UsuariosCountAggregateOutputType = {
  idUsuario: number
  email: number
  contrase_a: number
  nombreTutor: number
  nombreInfante: number
  FechaNacimientoInfante: number
  idAvatar: number
  fechaRegistro: number
  _all: number
}


export type UsuariosAvgAggregateInputType = {
  idUsuario?: true
  idAvatar?: true
}

export type UsuariosSumAggregateInputType = {
  idUsuario?: true
  idAvatar?: true
}

export type UsuariosMinAggregateInputType = {
  idUsuario?: true
  email?: true
  contrase_a?: true
  nombreTutor?: true
  nombreInfante?: true
  FechaNacimientoInfante?: true
  idAvatar?: true
  fechaRegistro?: true
}

export type UsuariosMaxAggregateInputType = {
  idUsuario?: true
  email?: true
  contrase_a?: true
  nombreTutor?: true
  nombreInfante?: true
  FechaNacimientoInfante?: true
  idAvatar?: true
  fechaRegistro?: true
}

export type UsuariosCountAggregateInputType = {
  idUsuario?: true
  email?: true
  contrase_a?: true
  nombreTutor?: true
  nombreInfante?: true
  FechaNacimientoInfante?: true
  idAvatar?: true
  fechaRegistro?: true
  _all?: true
}

export type UsuariosAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which usuarios to aggregate.
   */
  where?: Prisma.usuariosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuarios to fetch.
   */
  orderBy?: Prisma.usuariosOrderByWithRelationInput | Prisma.usuariosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.usuariosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned usuarios
  **/
  _count?: true | UsuariosCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UsuariosAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UsuariosSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UsuariosMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UsuariosMaxAggregateInputType
}

export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
      [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUsuarios[P]>
    : Prisma.GetScalarType<T[P], AggregateUsuarios[P]>
}




export type usuariosGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.usuariosWhereInput
  orderBy?: Prisma.usuariosOrderByWithAggregationInput | Prisma.usuariosOrderByWithAggregationInput[]
  by: Prisma.UsuariosScalarFieldEnum[] | Prisma.UsuariosScalarFieldEnum
  having?: Prisma.usuariosScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UsuariosCountAggregateInputType | true
  _avg?: UsuariosAvgAggregateInputType
  _sum?: UsuariosSumAggregateInputType
  _min?: UsuariosMinAggregateInputType
  _max?: UsuariosMaxAggregateInputType
}

export type UsuariosGroupByOutputType = {
  idUsuario: number
  email: string
  contrase_a: string
  nombreTutor: string | null
  nombreInfante: string
  FechaNacimientoInfante: Date | null
  idAvatar: number | null
  fechaRegistro: Date | null
  _count: UsuariosCountAggregateOutputType | null
  _avg: UsuariosAvgAggregateOutputType | null
  _sum: UsuariosSumAggregateOutputType | null
  _min: UsuariosMinAggregateOutputType | null
  _max: UsuariosMaxAggregateOutputType | null
}

type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UsuariosGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UsuariosGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UsuariosGroupByOutputType[P]>
      }
    >
  >



export type usuariosWhereInput = {
  AND?: Prisma.usuariosWhereInput | Prisma.usuariosWhereInput[]
  OR?: Prisma.usuariosWhereInput[]
  NOT?: Prisma.usuariosWhereInput | Prisma.usuariosWhereInput[]
  idUsuario?: Prisma.IntFilter<"usuarios"> | number
  email?: Prisma.StringFilter<"usuarios"> | string
  contrase_a?: Prisma.StringFilter<"usuarios"> | string
  nombreTutor?: Prisma.StringNullableFilter<"usuarios"> | string | null
  nombreInfante?: Prisma.StringFilter<"usuarios"> | string
  FechaNacimientoInfante?: Prisma.DateTimeNullableFilter<"usuarios"> | Date | string | null
  idAvatar?: Prisma.IntNullableFilter<"usuarios"> | number | null
  fechaRegistro?: Prisma.DateTimeNullableFilter<"usuarios"> | Date | string | null
}

export type usuariosOrderByWithRelationInput = {
  idUsuario?: Prisma.SortOrder
  email?: Prisma.SortOrder
  contrase_a?: Prisma.SortOrder
  nombreTutor?: Prisma.SortOrderInput | Prisma.SortOrder
  nombreInfante?: Prisma.SortOrder
  FechaNacimientoInfante?: Prisma.SortOrderInput | Prisma.SortOrder
  idAvatar?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaRegistro?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.usuariosOrderByRelevanceInput
}

export type usuariosWhereUniqueInput = Prisma.AtLeast<{
  idUsuario?: number
  email?: string
  AND?: Prisma.usuariosWhereInput | Prisma.usuariosWhereInput[]
  OR?: Prisma.usuariosWhereInput[]
  NOT?: Prisma.usuariosWhereInput | Prisma.usuariosWhereInput[]
  contrase_a?: Prisma.StringFilter<"usuarios"> | string
  nombreTutor?: Prisma.StringNullableFilter<"usuarios"> | string | null
  nombreInfante?: Prisma.StringFilter<"usuarios"> | string
  FechaNacimientoInfante?: Prisma.DateTimeNullableFilter<"usuarios"> | Date | string | null
  idAvatar?: Prisma.IntNullableFilter<"usuarios"> | number | null
  fechaRegistro?: Prisma.DateTimeNullableFilter<"usuarios"> | Date | string | null
}, "idUsuario" | "email">

export type usuariosOrderByWithAggregationInput = {
  idUsuario?: Prisma.SortOrder
  email?: Prisma.SortOrder
  contrase_a?: Prisma.SortOrder
  nombreTutor?: Prisma.SortOrderInput | Prisma.SortOrder
  nombreInfante?: Prisma.SortOrder
  FechaNacimientoInfante?: Prisma.SortOrderInput | Prisma.SortOrder
  idAvatar?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaRegistro?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.usuariosCountOrderByAggregateInput
  _avg?: Prisma.usuariosAvgOrderByAggregateInput
  _max?: Prisma.usuariosMaxOrderByAggregateInput
  _min?: Prisma.usuariosMinOrderByAggregateInput
  _sum?: Prisma.usuariosSumOrderByAggregateInput
}

export type usuariosScalarWhereWithAggregatesInput = {
  AND?: Prisma.usuariosScalarWhereWithAggregatesInput | Prisma.usuariosScalarWhereWithAggregatesInput[]
  OR?: Prisma.usuariosScalarWhereWithAggregatesInput[]
  NOT?: Prisma.usuariosScalarWhereWithAggregatesInput | Prisma.usuariosScalarWhereWithAggregatesInput[]
  idUsuario?: Prisma.IntWithAggregatesFilter<"usuarios"> | number
  email?: Prisma.StringWithAggregatesFilter<"usuarios"> | string
  contrase_a?: Prisma.StringWithAggregatesFilter<"usuarios"> | string
  nombreTutor?: Prisma.StringNullableWithAggregatesFilter<"usuarios"> | string | null
  nombreInfante?: Prisma.StringWithAggregatesFilter<"usuarios"> | string
  FechaNacimientoInfante?: Prisma.DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  idAvatar?: Prisma.IntNullableWithAggregatesFilter<"usuarios"> | number | null
  fechaRegistro?: Prisma.DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
}

export type usuariosCreateInput = {
  email: string
  contrase_a: string
  nombreTutor?: string | null
  nombreInfante: string
  FechaNacimientoInfante?: Date | string | null
  idAvatar?: number | null
  fechaRegistro?: Date | string | null
}

export type usuariosUncheckedCreateInput = {
  idUsuario?: number
  email: string
  contrase_a: string
  nombreTutor?: string | null
  nombreInfante: string
  FechaNacimientoInfante?: Date | string | null
  idAvatar?: number | null
  fechaRegistro?: Date | string | null
}

export type usuariosUpdateInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  contrase_a?: Prisma.StringFieldUpdateOperationsInput | string
  nombreTutor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nombreInfante?: Prisma.StringFieldUpdateOperationsInput | string
  FechaNacimientoInfante?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  idAvatar?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaRegistro?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariosUncheckedUpdateInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  contrase_a?: Prisma.StringFieldUpdateOperationsInput | string
  nombreTutor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nombreInfante?: Prisma.StringFieldUpdateOperationsInput | string
  FechaNacimientoInfante?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  idAvatar?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaRegistro?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariosCreateManyInput = {
  idUsuario?: number
  email: string
  contrase_a: string
  nombreTutor?: string | null
  nombreInfante: string
  FechaNacimientoInfante?: Date | string | null
  idAvatar?: number | null
  fechaRegistro?: Date | string | null
}

export type usuariosUpdateManyMutationInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string
  contrase_a?: Prisma.StringFieldUpdateOperationsInput | string
  nombreTutor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nombreInfante?: Prisma.StringFieldUpdateOperationsInput | string
  FechaNacimientoInfante?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  idAvatar?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaRegistro?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariosUncheckedUpdateManyInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  email?: Prisma.StringFieldUpdateOperationsInput | string
  contrase_a?: Prisma.StringFieldUpdateOperationsInput | string
  nombreTutor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  nombreInfante?: Prisma.StringFieldUpdateOperationsInput | string
  FechaNacimientoInfante?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  idAvatar?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  fechaRegistro?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariosOrderByRelevanceInput = {
  fields: Prisma.usuariosOrderByRelevanceFieldEnum | Prisma.usuariosOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type usuariosCountOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  email?: Prisma.SortOrder
  contrase_a?: Prisma.SortOrder
  nombreTutor?: Prisma.SortOrder
  nombreInfante?: Prisma.SortOrder
  FechaNacimientoInfante?: Prisma.SortOrder
  idAvatar?: Prisma.SortOrder
  fechaRegistro?: Prisma.SortOrder
}

export type usuariosAvgOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  idAvatar?: Prisma.SortOrder
}

export type usuariosMaxOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  email?: Prisma.SortOrder
  contrase_a?: Prisma.SortOrder
  nombreTutor?: Prisma.SortOrder
  nombreInfante?: Prisma.SortOrder
  FechaNacimientoInfante?: Prisma.SortOrder
  idAvatar?: Prisma.SortOrder
  fechaRegistro?: Prisma.SortOrder
}

export type usuariosMinOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  email?: Prisma.SortOrder
  contrase_a?: Prisma.SortOrder
  nombreTutor?: Prisma.SortOrder
  nombreInfante?: Prisma.SortOrder
  FechaNacimientoInfante?: Prisma.SortOrder
  idAvatar?: Prisma.SortOrder
  fechaRegistro?: Prisma.SortOrder
}

export type usuariosSumOrderByAggregateInput = {
  idUsuario?: Prisma.SortOrder
  idAvatar?: Prisma.SortOrder
}



export type usuariosSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idUsuario?: boolean
  email?: boolean
  contrase_a?: boolean
  nombreTutor?: boolean
  nombreInfante?: boolean
  FechaNacimientoInfante?: boolean
  idAvatar?: boolean
  fechaRegistro?: boolean
}, ExtArgs["result"]["usuarios"]>



export type usuariosSelectScalar = {
  idUsuario?: boolean
  email?: boolean
  contrase_a?: boolean
  nombreTutor?: boolean
  nombreInfante?: boolean
  FechaNacimientoInfante?: boolean
  idAvatar?: boolean
  fechaRegistro?: boolean
}

export type usuariosOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idUsuario" | "email" | "contrase_a" | "nombreTutor" | "nombreInfante" | "FechaNacimientoInfante" | "idAvatar" | "fechaRegistro", ExtArgs["result"]["usuarios"]>

export type $usuariosPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "usuarios"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idUsuario: number
    email: string
    contrase_a: string
    nombreTutor: string | null
    nombreInfante: string
    FechaNacimientoInfante: Date | null
    idAvatar: number | null
    fechaRegistro: Date | null
  }, ExtArgs["result"]["usuarios"]>
  composites: {}
}

export type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$usuariosPayload, S>

export type usuariosCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UsuariosCountAggregateInputType | true
  }

export interface usuariosDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
  /**
   * Find zero or one Usuarios that matches the filter.
   * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
   * @example
   * // Get one Usuarios
   * const usuarios = await prisma.usuarios.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends usuariosFindUniqueArgs>(args: Prisma.SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
   * @example
   * // Get one Usuarios
   * const usuarios = await prisma.usuarios.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuarios that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
   * @example
   * // Get one Usuarios
   * const usuarios = await prisma.usuarios.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends usuariosFindFirstArgs>(args?: Prisma.SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuarios that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
   * @example
   * // Get one Usuarios
   * const usuarios = await prisma.usuarios.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Usuarios that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Usuarios
   * const usuarios = await prisma.usuarios.findMany()
   * 
   * // Get first 10 Usuarios
   * const usuarios = await prisma.usuarios.findMany({ take: 10 })
   * 
   * // Only select the `idUsuario`
   * const usuariosWithIdUsuarioOnly = await prisma.usuarios.findMany({ select: { idUsuario: true } })
   * 
   */
  findMany<T extends usuariosFindManyArgs>(args?: Prisma.SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Usuarios.
   * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
   * @example
   * // Create one Usuarios
   * const Usuarios = await prisma.usuarios.create({
   *   data: {
   *     // ... data to create a Usuarios
   *   }
   * })
   * 
   */
  create<T extends usuariosCreateArgs>(args: Prisma.SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Usuarios.
   * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
   * @example
   * // Create many Usuarios
   * const usuarios = await prisma.usuarios.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends usuariosCreateManyArgs>(args?: Prisma.SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Usuarios.
   * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
   * @example
   * // Delete one Usuarios
   * const Usuarios = await prisma.usuarios.delete({
   *   where: {
   *     // ... filter to delete one Usuarios
   *   }
   * })
   * 
   */
  delete<T extends usuariosDeleteArgs>(args: Prisma.SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Usuarios.
   * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
   * @example
   * // Update one Usuarios
   * const usuarios = await prisma.usuarios.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends usuariosUpdateArgs>(args: Prisma.SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Usuarios.
   * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
   * @example
   * // Delete a few Usuarios
   * const { count } = await prisma.usuarios.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends usuariosDeleteManyArgs>(args?: Prisma.SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Usuarios
   * const usuarios = await prisma.usuarios.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends usuariosUpdateManyArgs>(args: Prisma.SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Usuarios.
   * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
   * @example
   * // Update or create a Usuarios
   * const usuarios = await prisma.usuarios.upsert({
   *   create: {
   *     // ... data to create a Usuarios
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Usuarios we want to update
   *   }
   * })
   */
  upsert<T extends usuariosUpsertArgs>(args: Prisma.SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma.Prisma__usuariosClient<runtime.Types.Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
   * @example
   * // Count the number of Usuarios
   * const count = await prisma.usuarios.count({
   *   where: {
   *     // ... the filter for the Usuarios we want to count
   *   }
   * })
  **/
  count<T extends usuariosCountArgs>(
    args?: Prisma.Subset<T, usuariosCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UsuariosCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UsuariosAggregateArgs>(args: Prisma.Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

  /**
   * Group by Usuarios.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariosGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends usuariosGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: usuariosGroupByArgs['orderBy'] }
      : { orderBy?: usuariosGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the usuarios model
 */
readonly fields: usuariosFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for usuarios.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the usuarios model
 */
export interface usuariosFieldRefs {
  readonly idUsuario: Prisma.FieldRef<"usuarios", 'Int'>
  readonly email: Prisma.FieldRef<"usuarios", 'String'>
  readonly contrase_a: Prisma.FieldRef<"usuarios", 'String'>
  readonly nombreTutor: Prisma.FieldRef<"usuarios", 'String'>
  readonly nombreInfante: Prisma.FieldRef<"usuarios", 'String'>
  readonly FechaNacimientoInfante: Prisma.FieldRef<"usuarios", 'DateTime'>
  readonly idAvatar: Prisma.FieldRef<"usuarios", 'Int'>
  readonly fechaRegistro: Prisma.FieldRef<"usuarios", 'DateTime'>
}
    

// Custom InputTypes
/**
 * usuarios findUnique
 */
export type usuariosFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter, which usuarios to fetch.
   */
  where: Prisma.usuariosWhereUniqueInput
}

/**
 * usuarios findUniqueOrThrow
 */
export type usuariosFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter, which usuarios to fetch.
   */
  where: Prisma.usuariosWhereUniqueInput
}

/**
 * usuarios findFirst
 */
export type usuariosFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter, which usuarios to fetch.
   */
  where?: Prisma.usuariosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuarios to fetch.
   */
  orderBy?: Prisma.usuariosOrderByWithRelationInput | Prisma.usuariosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for usuarios.
   */
  cursor?: Prisma.usuariosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of usuarios.
   */
  distinct?: Prisma.UsuariosScalarFieldEnum | Prisma.UsuariosScalarFieldEnum[]
}

/**
 * usuarios findFirstOrThrow
 */
export type usuariosFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter, which usuarios to fetch.
   */
  where?: Prisma.usuariosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuarios to fetch.
   */
  orderBy?: Prisma.usuariosOrderByWithRelationInput | Prisma.usuariosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for usuarios.
   */
  cursor?: Prisma.usuariosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuarios.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of usuarios.
   */
  distinct?: Prisma.UsuariosScalarFieldEnum | Prisma.UsuariosScalarFieldEnum[]
}

/**
 * usuarios findMany
 */
export type usuariosFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter, which usuarios to fetch.
   */
  where?: Prisma.usuariosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuarios to fetch.
   */
  orderBy?: Prisma.usuariosOrderByWithRelationInput | Prisma.usuariosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing usuarios.
   */
  cursor?: Prisma.usuariosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuarios from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuarios.
   */
  skip?: number
  distinct?: Prisma.UsuariosScalarFieldEnum | Prisma.UsuariosScalarFieldEnum[]
}

/**
 * usuarios create
 */
export type usuariosCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * The data needed to create a usuarios.
   */
  data: Prisma.XOR<Prisma.usuariosCreateInput, Prisma.usuariosUncheckedCreateInput>
}

/**
 * usuarios createMany
 */
export type usuariosCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many usuarios.
   */
  data: Prisma.usuariosCreateManyInput | Prisma.usuariosCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * usuarios update
 */
export type usuariosUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * The data needed to update a usuarios.
   */
  data: Prisma.XOR<Prisma.usuariosUpdateInput, Prisma.usuariosUncheckedUpdateInput>
  /**
   * Choose, which usuarios to update.
   */
  where: Prisma.usuariosWhereUniqueInput
}

/**
 * usuarios updateMany
 */
export type usuariosUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update usuarios.
   */
  data: Prisma.XOR<Prisma.usuariosUpdateManyMutationInput, Prisma.usuariosUncheckedUpdateManyInput>
  /**
   * Filter which usuarios to update
   */
  where?: Prisma.usuariosWhereInput
  /**
   * Limit how many usuarios to update.
   */
  limit?: number
}

/**
 * usuarios upsert
 */
export type usuariosUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * The filter to search for the usuarios to update in case it exists.
   */
  where: Prisma.usuariosWhereUniqueInput
  /**
   * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
   */
  create: Prisma.XOR<Prisma.usuariosCreateInput, Prisma.usuariosUncheckedCreateInput>
  /**
   * In case the usuarios was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.usuariosUpdateInput, Prisma.usuariosUncheckedUpdateInput>
}

/**
 * usuarios delete
 */
export type usuariosDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
  /**
   * Filter which usuarios to delete.
   */
  where: Prisma.usuariosWhereUniqueInput
}

/**
 * usuarios deleteMany
 */
export type usuariosDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which usuarios to delete
   */
  where?: Prisma.usuariosWhereInput
  /**
   * Limit how many usuarios to delete.
   */
  limit?: number
}

/**
 * usuarios without action
 */
export type usuariosDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuarios
   */
  select?: Prisma.usuariosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuarios
   */
  omit?: Prisma.usuariosOmit<ExtArgs> | null
}
