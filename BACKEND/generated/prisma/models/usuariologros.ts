
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `usuariologros` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model usuariologros
 * 
 */
export type usuariologrosModel = runtime.Types.Result.DefaultSelection<Prisma.$usuariologrosPayload>

export type AggregateUsuariologros = {
  _count: UsuariologrosCountAggregateOutputType | null
  _avg: UsuariologrosAvgAggregateOutputType | null
  _sum: UsuariologrosSumAggregateOutputType | null
  _min: UsuariologrosMinAggregateOutputType | null
  _max: UsuariologrosMaxAggregateOutputType | null
}

export type UsuariologrosAvgAggregateOutputType = {
  idUsuarioLogo: number | null
  idUsuario: number | null
  idLogro: number | null
}

export type UsuariologrosSumAggregateOutputType = {
  idUsuarioLogo: number | null
  idUsuario: number | null
  idLogro: number | null
}

export type UsuariologrosMinAggregateOutputType = {
  idUsuarioLogo: number | null
  idUsuario: number | null
  idLogro: number | null
  fechaObtenido: Date | null
}

export type UsuariologrosMaxAggregateOutputType = {
  idUsuarioLogo: number | null
  idUsuario: number | null
  idLogro: number | null
  fechaObtenido: Date | null
}

export type UsuariologrosCountAggregateOutputType = {
  idUsuarioLogo: number
  idUsuario: number
  idLogro: number
  fechaObtenido: number
  _all: number
}


export type UsuariologrosAvgAggregateInputType = {
  idUsuarioLogo?: true
  idUsuario?: true
  idLogro?: true
}

export type UsuariologrosSumAggregateInputType = {
  idUsuarioLogo?: true
  idUsuario?: true
  idLogro?: true
}

export type UsuariologrosMinAggregateInputType = {
  idUsuarioLogo?: true
  idUsuario?: true
  idLogro?: true
  fechaObtenido?: true
}

export type UsuariologrosMaxAggregateInputType = {
  idUsuarioLogo?: true
  idUsuario?: true
  idLogro?: true
  fechaObtenido?: true
}

export type UsuariologrosCountAggregateInputType = {
  idUsuarioLogo?: true
  idUsuario?: true
  idLogro?: true
  fechaObtenido?: true
  _all?: true
}

export type UsuariologrosAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which usuariologros to aggregate.
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuariologros to fetch.
   */
  orderBy?: Prisma.usuariologrosOrderByWithRelationInput | Prisma.usuariologrosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.usuariologrosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuariologros from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuariologros.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned usuariologros
  **/
  _count?: true | UsuariologrosCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UsuariologrosAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UsuariologrosSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UsuariologrosMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UsuariologrosMaxAggregateInputType
}

export type GetUsuariologrosAggregateType<T extends UsuariologrosAggregateArgs> = {
      [P in keyof T & keyof AggregateUsuariologros]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUsuariologros[P]>
    : Prisma.GetScalarType<T[P], AggregateUsuariologros[P]>
}




export type usuariologrosGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.usuariologrosWhereInput
  orderBy?: Prisma.usuariologrosOrderByWithAggregationInput | Prisma.usuariologrosOrderByWithAggregationInput[]
  by: Prisma.UsuariologrosScalarFieldEnum[] | Prisma.UsuariologrosScalarFieldEnum
  having?: Prisma.usuariologrosScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UsuariologrosCountAggregateInputType | true
  _avg?: UsuariologrosAvgAggregateInputType
  _sum?: UsuariologrosSumAggregateInputType
  _min?: UsuariologrosMinAggregateInputType
  _max?: UsuariologrosMaxAggregateInputType
}

export type UsuariologrosGroupByOutputType = {
  idUsuarioLogo: number
  idUsuario: number
  idLogro: number
  fechaObtenido: Date | null
  _count: UsuariologrosCountAggregateOutputType | null
  _avg: UsuariologrosAvgAggregateOutputType | null
  _sum: UsuariologrosSumAggregateOutputType | null
  _min: UsuariologrosMinAggregateOutputType | null
  _max: UsuariologrosMaxAggregateOutputType | null
}

type GetUsuariologrosGroupByPayload<T extends usuariologrosGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UsuariologrosGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UsuariologrosGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UsuariologrosGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UsuariologrosGroupByOutputType[P]>
      }
    >
  >



export type usuariologrosWhereInput = {
  AND?: Prisma.usuariologrosWhereInput | Prisma.usuariologrosWhereInput[]
  OR?: Prisma.usuariologrosWhereInput[]
  NOT?: Prisma.usuariologrosWhereInput | Prisma.usuariologrosWhereInput[]
  idUsuarioLogo?: Prisma.IntFilter<"usuariologros"> | number
  idUsuario?: Prisma.IntFilter<"usuariologros"> | number
  idLogro?: Prisma.IntFilter<"usuariologros"> | number
  fechaObtenido?: Prisma.DateTimeNullableFilter<"usuariologros"> | Date | string | null
}

export type usuariologrosOrderByWithRelationInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
  fechaObtenido?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type usuariologrosWhereUniqueInput = Prisma.AtLeast<{
  idUsuarioLogo?: number
  idUsuario_idLogro?: Prisma.usuariologrosIdUsuarioIdLogroCompoundUniqueInput
  AND?: Prisma.usuariologrosWhereInput | Prisma.usuariologrosWhereInput[]
  OR?: Prisma.usuariologrosWhereInput[]
  NOT?: Prisma.usuariologrosWhereInput | Prisma.usuariologrosWhereInput[]
  idUsuario?: Prisma.IntFilter<"usuariologros"> | number
  idLogro?: Prisma.IntFilter<"usuariologros"> | number
  fechaObtenido?: Prisma.DateTimeNullableFilter<"usuariologros"> | Date | string | null
}, "idUsuarioLogo" | "idUsuario_idLogro">

export type usuariologrosOrderByWithAggregationInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
  fechaObtenido?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.usuariologrosCountOrderByAggregateInput
  _avg?: Prisma.usuariologrosAvgOrderByAggregateInput
  _max?: Prisma.usuariologrosMaxOrderByAggregateInput
  _min?: Prisma.usuariologrosMinOrderByAggregateInput
  _sum?: Prisma.usuariologrosSumOrderByAggregateInput
}

export type usuariologrosScalarWhereWithAggregatesInput = {
  AND?: Prisma.usuariologrosScalarWhereWithAggregatesInput | Prisma.usuariologrosScalarWhereWithAggregatesInput[]
  OR?: Prisma.usuariologrosScalarWhereWithAggregatesInput[]
  NOT?: Prisma.usuariologrosScalarWhereWithAggregatesInput | Prisma.usuariologrosScalarWhereWithAggregatesInput[]
  idUsuarioLogo?: Prisma.IntWithAggregatesFilter<"usuariologros"> | number
  idUsuario?: Prisma.IntWithAggregatesFilter<"usuariologros"> | number
  idLogro?: Prisma.IntWithAggregatesFilter<"usuariologros"> | number
  fechaObtenido?: Prisma.DateTimeNullableWithAggregatesFilter<"usuariologros"> | Date | string | null
}

export type usuariologrosCreateInput = {
  idUsuario: number
  idLogro: number
  fechaObtenido?: Date | string | null
}

export type usuariologrosUncheckedCreateInput = {
  idUsuarioLogo?: number
  idUsuario: number
  idLogro: number
  fechaObtenido?: Date | string | null
}

export type usuariologrosUpdateInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idLogro?: Prisma.IntFieldUpdateOperationsInput | number
  fechaObtenido?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariologrosUncheckedUpdateInput = {
  idUsuarioLogo?: Prisma.IntFieldUpdateOperationsInput | number
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idLogro?: Prisma.IntFieldUpdateOperationsInput | number
  fechaObtenido?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariologrosCreateManyInput = {
  idUsuarioLogo?: number
  idUsuario: number
  idLogro: number
  fechaObtenido?: Date | string | null
}

export type usuariologrosUpdateManyMutationInput = {
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idLogro?: Prisma.IntFieldUpdateOperationsInput | number
  fechaObtenido?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariologrosUncheckedUpdateManyInput = {
  idUsuarioLogo?: Prisma.IntFieldUpdateOperationsInput | number
  idUsuario?: Prisma.IntFieldUpdateOperationsInput | number
  idLogro?: Prisma.IntFieldUpdateOperationsInput | number
  fechaObtenido?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type usuariologrosIdUsuarioIdLogroCompoundUniqueInput = {
  idUsuario: number
  idLogro: number
}

export type usuariologrosCountOrderByAggregateInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
  fechaObtenido?: Prisma.SortOrder
}

export type usuariologrosAvgOrderByAggregateInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
}

export type usuariologrosMaxOrderByAggregateInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
  fechaObtenido?: Prisma.SortOrder
}

export type usuariologrosMinOrderByAggregateInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
  fechaObtenido?: Prisma.SortOrder
}

export type usuariologrosSumOrderByAggregateInput = {
  idUsuarioLogo?: Prisma.SortOrder
  idUsuario?: Prisma.SortOrder
  idLogro?: Prisma.SortOrder
}



export type usuariologrosSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idUsuarioLogo?: boolean
  idUsuario?: boolean
  idLogro?: boolean
  fechaObtenido?: boolean
}, ExtArgs["result"]["usuariologros"]>



export type usuariologrosSelectScalar = {
  idUsuarioLogo?: boolean
  idUsuario?: boolean
  idLogro?: boolean
  fechaObtenido?: boolean
}

export type usuariologrosOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idUsuarioLogo" | "idUsuario" | "idLogro" | "fechaObtenido", ExtArgs["result"]["usuariologros"]>

export type $usuariologrosPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "usuariologros"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idUsuarioLogo: number
    idUsuario: number
    idLogro: number
    fechaObtenido: Date | null
  }, ExtArgs["result"]["usuariologros"]>
  composites: {}
}

export type usuariologrosGetPayload<S extends boolean | null | undefined | usuariologrosDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload, S>

export type usuariologrosCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<usuariologrosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UsuariologrosCountAggregateInputType | true
  }

export interface usuariologrosDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuariologros'], meta: { name: 'usuariologros' } }
  /**
   * Find zero or one Usuariologros that matches the filter.
   * @param {usuariologrosFindUniqueArgs} args - Arguments to find a Usuariologros
   * @example
   * // Get one Usuariologros
   * const usuariologros = await prisma.usuariologros.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends usuariologrosFindUniqueArgs>(args: Prisma.SelectSubset<T, usuariologrosFindUniqueArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Usuariologros that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {usuariologrosFindUniqueOrThrowArgs} args - Arguments to find a Usuariologros
   * @example
   * // Get one Usuariologros
   * const usuariologros = await prisma.usuariologros.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends usuariologrosFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, usuariologrosFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuariologros that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosFindFirstArgs} args - Arguments to find a Usuariologros
   * @example
   * // Get one Usuariologros
   * const usuariologros = await prisma.usuariologros.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends usuariologrosFindFirstArgs>(args?: Prisma.SelectSubset<T, usuariologrosFindFirstArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Usuariologros that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosFindFirstOrThrowArgs} args - Arguments to find a Usuariologros
   * @example
   * // Get one Usuariologros
   * const usuariologros = await prisma.usuariologros.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends usuariologrosFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, usuariologrosFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Usuariologros that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Usuariologros
   * const usuariologros = await prisma.usuariologros.findMany()
   * 
   * // Get first 10 Usuariologros
   * const usuariologros = await prisma.usuariologros.findMany({ take: 10 })
   * 
   * // Only select the `idUsuarioLogo`
   * const usuariologrosWithIdUsuarioLogoOnly = await prisma.usuariologros.findMany({ select: { idUsuarioLogo: true } })
   * 
   */
  findMany<T extends usuariologrosFindManyArgs>(args?: Prisma.SelectSubset<T, usuariologrosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Usuariologros.
   * @param {usuariologrosCreateArgs} args - Arguments to create a Usuariologros.
   * @example
   * // Create one Usuariologros
   * const Usuariologros = await prisma.usuariologros.create({
   *   data: {
   *     // ... data to create a Usuariologros
   *   }
   * })
   * 
   */
  create<T extends usuariologrosCreateArgs>(args: Prisma.SelectSubset<T, usuariologrosCreateArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Usuariologros.
   * @param {usuariologrosCreateManyArgs} args - Arguments to create many Usuariologros.
   * @example
   * // Create many Usuariologros
   * const usuariologros = await prisma.usuariologros.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends usuariologrosCreateManyArgs>(args?: Prisma.SelectSubset<T, usuariologrosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Usuariologros.
   * @param {usuariologrosDeleteArgs} args - Arguments to delete one Usuariologros.
   * @example
   * // Delete one Usuariologros
   * const Usuariologros = await prisma.usuariologros.delete({
   *   where: {
   *     // ... filter to delete one Usuariologros
   *   }
   * })
   * 
   */
  delete<T extends usuariologrosDeleteArgs>(args: Prisma.SelectSubset<T, usuariologrosDeleteArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Usuariologros.
   * @param {usuariologrosUpdateArgs} args - Arguments to update one Usuariologros.
   * @example
   * // Update one Usuariologros
   * const usuariologros = await prisma.usuariologros.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends usuariologrosUpdateArgs>(args: Prisma.SelectSubset<T, usuariologrosUpdateArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Usuariologros.
   * @param {usuariologrosDeleteManyArgs} args - Arguments to filter Usuariologros to delete.
   * @example
   * // Delete a few Usuariologros
   * const { count } = await prisma.usuariologros.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends usuariologrosDeleteManyArgs>(args?: Prisma.SelectSubset<T, usuariologrosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Usuariologros.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Usuariologros
   * const usuariologros = await prisma.usuariologros.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends usuariologrosUpdateManyArgs>(args: Prisma.SelectSubset<T, usuariologrosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Usuariologros.
   * @param {usuariologrosUpsertArgs} args - Arguments to update or create a Usuariologros.
   * @example
   * // Update or create a Usuariologros
   * const usuariologros = await prisma.usuariologros.upsert({
   *   create: {
   *     // ... data to create a Usuariologros
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Usuariologros we want to update
   *   }
   * })
   */
  upsert<T extends usuariologrosUpsertArgs>(args: Prisma.SelectSubset<T, usuariologrosUpsertArgs<ExtArgs>>): Prisma.Prisma__usuariologrosClient<runtime.Types.Result.GetResult<Prisma.$usuariologrosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Usuariologros.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosCountArgs} args - Arguments to filter Usuariologros to count.
   * @example
   * // Count the number of Usuariologros
   * const count = await prisma.usuariologros.count({
   *   where: {
   *     // ... the filter for the Usuariologros we want to count
   *   }
   * })
  **/
  count<T extends usuariologrosCountArgs>(
    args?: Prisma.Subset<T, usuariologrosCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UsuariologrosCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Usuariologros.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UsuariologrosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UsuariologrosAggregateArgs>(args: Prisma.Subset<T, UsuariologrosAggregateArgs>): Prisma.PrismaPromise<GetUsuariologrosAggregateType<T>>

  /**
   * Group by Usuariologros.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {usuariologrosGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends usuariologrosGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: usuariologrosGroupByArgs['orderBy'] }
      : { orderBy?: usuariologrosGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, usuariologrosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariologrosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the usuariologros model
 */
readonly fields: usuariologrosFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for usuariologros.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__usuariologrosClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the usuariologros model
 */
export interface usuariologrosFieldRefs {
  readonly idUsuarioLogo: Prisma.FieldRef<"usuariologros", 'Int'>
  readonly idUsuario: Prisma.FieldRef<"usuariologros", 'Int'>
  readonly idLogro: Prisma.FieldRef<"usuariologros", 'Int'>
  readonly fechaObtenido: Prisma.FieldRef<"usuariologros", 'DateTime'>
}
    

// Custom InputTypes
/**
 * usuariologros findUnique
 */
export type usuariologrosFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter, which usuariologros to fetch.
   */
  where: Prisma.usuariologrosWhereUniqueInput
}

/**
 * usuariologros findUniqueOrThrow
 */
export type usuariologrosFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter, which usuariologros to fetch.
   */
  where: Prisma.usuariologrosWhereUniqueInput
}

/**
 * usuariologros findFirst
 */
export type usuariologrosFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter, which usuariologros to fetch.
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuariologros to fetch.
   */
  orderBy?: Prisma.usuariologrosOrderByWithRelationInput | Prisma.usuariologrosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for usuariologros.
   */
  cursor?: Prisma.usuariologrosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuariologros from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuariologros.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of usuariologros.
   */
  distinct?: Prisma.UsuariologrosScalarFieldEnum | Prisma.UsuariologrosScalarFieldEnum[]
}

/**
 * usuariologros findFirstOrThrow
 */
export type usuariologrosFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter, which usuariologros to fetch.
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuariologros to fetch.
   */
  orderBy?: Prisma.usuariologrosOrderByWithRelationInput | Prisma.usuariologrosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for usuariologros.
   */
  cursor?: Prisma.usuariologrosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuariologros from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuariologros.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of usuariologros.
   */
  distinct?: Prisma.UsuariologrosScalarFieldEnum | Prisma.UsuariologrosScalarFieldEnum[]
}

/**
 * usuariologros findMany
 */
export type usuariologrosFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter, which usuariologros to fetch.
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of usuariologros to fetch.
   */
  orderBy?: Prisma.usuariologrosOrderByWithRelationInput | Prisma.usuariologrosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing usuariologros.
   */
  cursor?: Prisma.usuariologrosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` usuariologros from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` usuariologros.
   */
  skip?: number
  distinct?: Prisma.UsuariologrosScalarFieldEnum | Prisma.UsuariologrosScalarFieldEnum[]
}

/**
 * usuariologros create
 */
export type usuariologrosCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * The data needed to create a usuariologros.
   */
  data: Prisma.XOR<Prisma.usuariologrosCreateInput, Prisma.usuariologrosUncheckedCreateInput>
}

/**
 * usuariologros createMany
 */
export type usuariologrosCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many usuariologros.
   */
  data: Prisma.usuariologrosCreateManyInput | Prisma.usuariologrosCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * usuariologros update
 */
export type usuariologrosUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * The data needed to update a usuariologros.
   */
  data: Prisma.XOR<Prisma.usuariologrosUpdateInput, Prisma.usuariologrosUncheckedUpdateInput>
  /**
   * Choose, which usuariologros to update.
   */
  where: Prisma.usuariologrosWhereUniqueInput
}

/**
 * usuariologros updateMany
 */
export type usuariologrosUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update usuariologros.
   */
  data: Prisma.XOR<Prisma.usuariologrosUpdateManyMutationInput, Prisma.usuariologrosUncheckedUpdateManyInput>
  /**
   * Filter which usuariologros to update
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * Limit how many usuariologros to update.
   */
  limit?: number
}

/**
 * usuariologros upsert
 */
export type usuariologrosUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * The filter to search for the usuariologros to update in case it exists.
   */
  where: Prisma.usuariologrosWhereUniqueInput
  /**
   * In case the usuariologros found by the `where` argument doesn't exist, create a new usuariologros with this data.
   */
  create: Prisma.XOR<Prisma.usuariologrosCreateInput, Prisma.usuariologrosUncheckedCreateInput>
  /**
   * In case the usuariologros was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.usuariologrosUpdateInput, Prisma.usuariologrosUncheckedUpdateInput>
}

/**
 * usuariologros delete
 */
export type usuariologrosDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
  /**
   * Filter which usuariologros to delete.
   */
  where: Prisma.usuariologrosWhereUniqueInput
}

/**
 * usuariologros deleteMany
 */
export type usuariologrosDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which usuariologros to delete
   */
  where?: Prisma.usuariologrosWhereInput
  /**
   * Limit how many usuariologros to delete.
   */
  limit?: number
}

/**
 * usuariologros without action
 */
export type usuariologrosDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the usuariologros
   */
  select?: Prisma.usuariologrosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the usuariologros
   */
  omit?: Prisma.usuariologrosOmit<ExtArgs> | null
}
