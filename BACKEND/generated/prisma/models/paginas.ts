
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `paginas` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model paginas
 * 
 */
export type paginasModel = runtime.Types.Result.DefaultSelection<Prisma.$paginasPayload>

export type AggregatePaginas = {
  _count: PaginasCountAggregateOutputType | null
  _avg: PaginasAvgAggregateOutputType | null
  _sum: PaginasSumAggregateOutputType | null
  _min: PaginasMinAggregateOutputType | null
  _max: PaginasMaxAggregateOutputType | null
}

export type PaginasAvgAggregateOutputType = {
  idPagina: number | null
  idCuento: number | null
  numeroPagina: number | null
}

export type PaginasSumAggregateOutputType = {
  idPagina: number | null
  idCuento: number | null
  numeroPagina: number | null
}

export type PaginasMinAggregateOutputType = {
  idPagina: number | null
  idCuento: number | null
  numeroPagina: number | null
  texto: string | null
  urlImagen: string | null
  urlAudio: string | null
}

export type PaginasMaxAggregateOutputType = {
  idPagina: number | null
  idCuento: number | null
  numeroPagina: number | null
  texto: string | null
  urlImagen: string | null
  urlAudio: string | null
}

export type PaginasCountAggregateOutputType = {
  idPagina: number
  idCuento: number
  numeroPagina: number
  texto: number
  urlImagen: number
  urlAudio: number
  _all: number
}


export type PaginasAvgAggregateInputType = {
  idPagina?: true
  idCuento?: true
  numeroPagina?: true
}

export type PaginasSumAggregateInputType = {
  idPagina?: true
  idCuento?: true
  numeroPagina?: true
}

export type PaginasMinAggregateInputType = {
  idPagina?: true
  idCuento?: true
  numeroPagina?: true
  texto?: true
  urlImagen?: true
  urlAudio?: true
}

export type PaginasMaxAggregateInputType = {
  idPagina?: true
  idCuento?: true
  numeroPagina?: true
  texto?: true
  urlImagen?: true
  urlAudio?: true
}

export type PaginasCountAggregateInputType = {
  idPagina?: true
  idCuento?: true
  numeroPagina?: true
  texto?: true
  urlImagen?: true
  urlAudio?: true
  _all?: true
}

export type PaginasAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which paginas to aggregate.
   */
  where?: Prisma.paginasWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of paginas to fetch.
   */
  orderBy?: Prisma.paginasOrderByWithRelationInput | Prisma.paginasOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.paginasWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` paginas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` paginas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned paginas
  **/
  _count?: true | PaginasCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PaginasAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PaginasSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PaginasMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PaginasMaxAggregateInputType
}

export type GetPaginasAggregateType<T extends PaginasAggregateArgs> = {
      [P in keyof T & keyof AggregatePaginas]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePaginas[P]>
    : Prisma.GetScalarType<T[P], AggregatePaginas[P]>
}




export type paginasGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.paginasWhereInput
  orderBy?: Prisma.paginasOrderByWithAggregationInput | Prisma.paginasOrderByWithAggregationInput[]
  by: Prisma.PaginasScalarFieldEnum[] | Prisma.PaginasScalarFieldEnum
  having?: Prisma.paginasScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PaginasCountAggregateInputType | true
  _avg?: PaginasAvgAggregateInputType
  _sum?: PaginasSumAggregateInputType
  _min?: PaginasMinAggregateInputType
  _max?: PaginasMaxAggregateInputType
}

export type PaginasGroupByOutputType = {
  idPagina: number
  idCuento: number
  numeroPagina: number
  texto: string | null
  urlImagen: string | null
  urlAudio: string | null
  _count: PaginasCountAggregateOutputType | null
  _avg: PaginasAvgAggregateOutputType | null
  _sum: PaginasSumAggregateOutputType | null
  _min: PaginasMinAggregateOutputType | null
  _max: PaginasMaxAggregateOutputType | null
}

type GetPaginasGroupByPayload<T extends paginasGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PaginasGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PaginasGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PaginasGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PaginasGroupByOutputType[P]>
      }
    >
  >



export type paginasWhereInput = {
  AND?: Prisma.paginasWhereInput | Prisma.paginasWhereInput[]
  OR?: Prisma.paginasWhereInput[]
  NOT?: Prisma.paginasWhereInput | Prisma.paginasWhereInput[]
  idPagina?: Prisma.IntFilter<"paginas"> | number
  idCuento?: Prisma.IntFilter<"paginas"> | number
  numeroPagina?: Prisma.IntFilter<"paginas"> | number
  texto?: Prisma.StringNullableFilter<"paginas"> | string | null
  urlImagen?: Prisma.StringNullableFilter<"paginas"> | string | null
  urlAudio?: Prisma.StringNullableFilter<"paginas"> | string | null
}

export type paginasOrderByWithRelationInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
  texto?: Prisma.SortOrderInput | Prisma.SortOrder
  urlImagen?: Prisma.SortOrderInput | Prisma.SortOrder
  urlAudio?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.paginasOrderByRelevanceInput
}

export type paginasWhereUniqueInput = Prisma.AtLeast<{
  idPagina?: number
  idCuento_numeroPagina?: Prisma.paginasIdCuentoNumeroPaginaCompoundUniqueInput
  AND?: Prisma.paginasWhereInput | Prisma.paginasWhereInput[]
  OR?: Prisma.paginasWhereInput[]
  NOT?: Prisma.paginasWhereInput | Prisma.paginasWhereInput[]
  idCuento?: Prisma.IntFilter<"paginas"> | number
  numeroPagina?: Prisma.IntFilter<"paginas"> | number
  texto?: Prisma.StringNullableFilter<"paginas"> | string | null
  urlImagen?: Prisma.StringNullableFilter<"paginas"> | string | null
  urlAudio?: Prisma.StringNullableFilter<"paginas"> | string | null
}, "idPagina" | "idCuento_numeroPagina">

export type paginasOrderByWithAggregationInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
  texto?: Prisma.SortOrderInput | Prisma.SortOrder
  urlImagen?: Prisma.SortOrderInput | Prisma.SortOrder
  urlAudio?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.paginasCountOrderByAggregateInput
  _avg?: Prisma.paginasAvgOrderByAggregateInput
  _max?: Prisma.paginasMaxOrderByAggregateInput
  _min?: Prisma.paginasMinOrderByAggregateInput
  _sum?: Prisma.paginasSumOrderByAggregateInput
}

export type paginasScalarWhereWithAggregatesInput = {
  AND?: Prisma.paginasScalarWhereWithAggregatesInput | Prisma.paginasScalarWhereWithAggregatesInput[]
  OR?: Prisma.paginasScalarWhereWithAggregatesInput[]
  NOT?: Prisma.paginasScalarWhereWithAggregatesInput | Prisma.paginasScalarWhereWithAggregatesInput[]
  idPagina?: Prisma.IntWithAggregatesFilter<"paginas"> | number
  idCuento?: Prisma.IntWithAggregatesFilter<"paginas"> | number
  numeroPagina?: Prisma.IntWithAggregatesFilter<"paginas"> | number
  texto?: Prisma.StringNullableWithAggregatesFilter<"paginas"> | string | null
  urlImagen?: Prisma.StringNullableWithAggregatesFilter<"paginas"> | string | null
  urlAudio?: Prisma.StringNullableWithAggregatesFilter<"paginas"> | string | null
}

export type paginasCreateInput = {
  idCuento: number
  numeroPagina: number
  texto?: string | null
  urlImagen?: string | null
  urlAudio?: string | null
}

export type paginasUncheckedCreateInput = {
  idPagina?: number
  idCuento: number
  numeroPagina: number
  texto?: string | null
  urlImagen?: string | null
  urlAudio?: string | null
}

export type paginasUpdateInput = {
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  numeroPagina?: Prisma.IntFieldUpdateOperationsInput | number
  texto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlImagen?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlAudio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type paginasUncheckedUpdateInput = {
  idPagina?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  numeroPagina?: Prisma.IntFieldUpdateOperationsInput | number
  texto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlImagen?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlAudio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type paginasCreateManyInput = {
  idPagina?: number
  idCuento: number
  numeroPagina: number
  texto?: string | null
  urlImagen?: string | null
  urlAudio?: string | null
}

export type paginasUpdateManyMutationInput = {
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  numeroPagina?: Prisma.IntFieldUpdateOperationsInput | number
  texto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlImagen?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlAudio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type paginasUncheckedUpdateManyInput = {
  idPagina?: Prisma.IntFieldUpdateOperationsInput | number
  idCuento?: Prisma.IntFieldUpdateOperationsInput | number
  numeroPagina?: Prisma.IntFieldUpdateOperationsInput | number
  texto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlImagen?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  urlAudio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type paginasOrderByRelevanceInput = {
  fields: Prisma.paginasOrderByRelevanceFieldEnum | Prisma.paginasOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type paginasIdCuentoNumeroPaginaCompoundUniqueInput = {
  idCuento: number
  numeroPagina: number
}

export type paginasCountOrderByAggregateInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
  texto?: Prisma.SortOrder
  urlImagen?: Prisma.SortOrder
  urlAudio?: Prisma.SortOrder
}

export type paginasAvgOrderByAggregateInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
}

export type paginasMaxOrderByAggregateInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
  texto?: Prisma.SortOrder
  urlImagen?: Prisma.SortOrder
  urlAudio?: Prisma.SortOrder
}

export type paginasMinOrderByAggregateInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
  texto?: Prisma.SortOrder
  urlImagen?: Prisma.SortOrder
  urlAudio?: Prisma.SortOrder
}

export type paginasSumOrderByAggregateInput = {
  idPagina?: Prisma.SortOrder
  idCuento?: Prisma.SortOrder
  numeroPagina?: Prisma.SortOrder
}



export type paginasSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idPagina?: boolean
  idCuento?: boolean
  numeroPagina?: boolean
  texto?: boolean
  urlImagen?: boolean
  urlAudio?: boolean
}, ExtArgs["result"]["paginas"]>



export type paginasSelectScalar = {
  idPagina?: boolean
  idCuento?: boolean
  numeroPagina?: boolean
  texto?: boolean
  urlImagen?: boolean
  urlAudio?: boolean
}

export type paginasOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idPagina" | "idCuento" | "numeroPagina" | "texto" | "urlImagen" | "urlAudio", ExtArgs["result"]["paginas"]>

export type $paginasPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "paginas"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idPagina: number
    idCuento: number
    numeroPagina: number
    texto: string | null
    urlImagen: string | null
    urlAudio: string | null
  }, ExtArgs["result"]["paginas"]>
  composites: {}
}

export type paginasGetPayload<S extends boolean | null | undefined | paginasDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$paginasPayload, S>

export type paginasCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<paginasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PaginasCountAggregateInputType | true
  }

export interface paginasDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['paginas'], meta: { name: 'paginas' } }
  /**
   * Find zero or one Paginas that matches the filter.
   * @param {paginasFindUniqueArgs} args - Arguments to find a Paginas
   * @example
   * // Get one Paginas
   * const paginas = await prisma.paginas.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends paginasFindUniqueArgs>(args: Prisma.SelectSubset<T, paginasFindUniqueArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Paginas that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {paginasFindUniqueOrThrowArgs} args - Arguments to find a Paginas
   * @example
   * // Get one Paginas
   * const paginas = await prisma.paginas.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends paginasFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, paginasFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Paginas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasFindFirstArgs} args - Arguments to find a Paginas
   * @example
   * // Get one Paginas
   * const paginas = await prisma.paginas.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends paginasFindFirstArgs>(args?: Prisma.SelectSubset<T, paginasFindFirstArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Paginas that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasFindFirstOrThrowArgs} args - Arguments to find a Paginas
   * @example
   * // Get one Paginas
   * const paginas = await prisma.paginas.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends paginasFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, paginasFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Paginas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Paginas
   * const paginas = await prisma.paginas.findMany()
   * 
   * // Get first 10 Paginas
   * const paginas = await prisma.paginas.findMany({ take: 10 })
   * 
   * // Only select the `idPagina`
   * const paginasWithIdPaginaOnly = await prisma.paginas.findMany({ select: { idPagina: true } })
   * 
   */
  findMany<T extends paginasFindManyArgs>(args?: Prisma.SelectSubset<T, paginasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Paginas.
   * @param {paginasCreateArgs} args - Arguments to create a Paginas.
   * @example
   * // Create one Paginas
   * const Paginas = await prisma.paginas.create({
   *   data: {
   *     // ... data to create a Paginas
   *   }
   * })
   * 
   */
  create<T extends paginasCreateArgs>(args: Prisma.SelectSubset<T, paginasCreateArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Paginas.
   * @param {paginasCreateManyArgs} args - Arguments to create many Paginas.
   * @example
   * // Create many Paginas
   * const paginas = await prisma.paginas.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends paginasCreateManyArgs>(args?: Prisma.SelectSubset<T, paginasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Paginas.
   * @param {paginasDeleteArgs} args - Arguments to delete one Paginas.
   * @example
   * // Delete one Paginas
   * const Paginas = await prisma.paginas.delete({
   *   where: {
   *     // ... filter to delete one Paginas
   *   }
   * })
   * 
   */
  delete<T extends paginasDeleteArgs>(args: Prisma.SelectSubset<T, paginasDeleteArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Paginas.
   * @param {paginasUpdateArgs} args - Arguments to update one Paginas.
   * @example
   * // Update one Paginas
   * const paginas = await prisma.paginas.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends paginasUpdateArgs>(args: Prisma.SelectSubset<T, paginasUpdateArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Paginas.
   * @param {paginasDeleteManyArgs} args - Arguments to filter Paginas to delete.
   * @example
   * // Delete a few Paginas
   * const { count } = await prisma.paginas.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends paginasDeleteManyArgs>(args?: Prisma.SelectSubset<T, paginasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Paginas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Paginas
   * const paginas = await prisma.paginas.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends paginasUpdateManyArgs>(args: Prisma.SelectSubset<T, paginasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Paginas.
   * @param {paginasUpsertArgs} args - Arguments to update or create a Paginas.
   * @example
   * // Update or create a Paginas
   * const paginas = await prisma.paginas.upsert({
   *   create: {
   *     // ... data to create a Paginas
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Paginas we want to update
   *   }
   * })
   */
  upsert<T extends paginasUpsertArgs>(args: Prisma.SelectSubset<T, paginasUpsertArgs<ExtArgs>>): Prisma.Prisma__paginasClient<runtime.Types.Result.GetResult<Prisma.$paginasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Paginas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasCountArgs} args - Arguments to filter Paginas to count.
   * @example
   * // Count the number of Paginas
   * const count = await prisma.paginas.count({
   *   where: {
   *     // ... the filter for the Paginas we want to count
   *   }
   * })
  **/
  count<T extends paginasCountArgs>(
    args?: Prisma.Subset<T, paginasCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PaginasCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Paginas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PaginasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PaginasAggregateArgs>(args: Prisma.Subset<T, PaginasAggregateArgs>): Prisma.PrismaPromise<GetPaginasAggregateType<T>>

  /**
   * Group by Paginas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {paginasGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends paginasGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: paginasGroupByArgs['orderBy'] }
      : { orderBy?: paginasGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, paginasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaginasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the paginas model
 */
readonly fields: paginasFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for paginas.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__paginasClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the paginas model
 */
export interface paginasFieldRefs {
  readonly idPagina: Prisma.FieldRef<"paginas", 'Int'>
  readonly idCuento: Prisma.FieldRef<"paginas", 'Int'>
  readonly numeroPagina: Prisma.FieldRef<"paginas", 'Int'>
  readonly texto: Prisma.FieldRef<"paginas", 'String'>
  readonly urlImagen: Prisma.FieldRef<"paginas", 'String'>
  readonly urlAudio: Prisma.FieldRef<"paginas", 'String'>
}
    

// Custom InputTypes
/**
 * paginas findUnique
 */
export type paginasFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter, which paginas to fetch.
   */
  where: Prisma.paginasWhereUniqueInput
}

/**
 * paginas findUniqueOrThrow
 */
export type paginasFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter, which paginas to fetch.
   */
  where: Prisma.paginasWhereUniqueInput
}

/**
 * paginas findFirst
 */
export type paginasFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter, which paginas to fetch.
   */
  where?: Prisma.paginasWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of paginas to fetch.
   */
  orderBy?: Prisma.paginasOrderByWithRelationInput | Prisma.paginasOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for paginas.
   */
  cursor?: Prisma.paginasWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` paginas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` paginas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of paginas.
   */
  distinct?: Prisma.PaginasScalarFieldEnum | Prisma.PaginasScalarFieldEnum[]
}

/**
 * paginas findFirstOrThrow
 */
export type paginasFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter, which paginas to fetch.
   */
  where?: Prisma.paginasWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of paginas to fetch.
   */
  orderBy?: Prisma.paginasOrderByWithRelationInput | Prisma.paginasOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for paginas.
   */
  cursor?: Prisma.paginasWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` paginas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` paginas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of paginas.
   */
  distinct?: Prisma.PaginasScalarFieldEnum | Prisma.PaginasScalarFieldEnum[]
}

/**
 * paginas findMany
 */
export type paginasFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter, which paginas to fetch.
   */
  where?: Prisma.paginasWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of paginas to fetch.
   */
  orderBy?: Prisma.paginasOrderByWithRelationInput | Prisma.paginasOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing paginas.
   */
  cursor?: Prisma.paginasWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` paginas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` paginas.
   */
  skip?: number
  distinct?: Prisma.PaginasScalarFieldEnum | Prisma.PaginasScalarFieldEnum[]
}

/**
 * paginas create
 */
export type paginasCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * The data needed to create a paginas.
   */
  data: Prisma.XOR<Prisma.paginasCreateInput, Prisma.paginasUncheckedCreateInput>
}

/**
 * paginas createMany
 */
export type paginasCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many paginas.
   */
  data: Prisma.paginasCreateManyInput | Prisma.paginasCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * paginas update
 */
export type paginasUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * The data needed to update a paginas.
   */
  data: Prisma.XOR<Prisma.paginasUpdateInput, Prisma.paginasUncheckedUpdateInput>
  /**
   * Choose, which paginas to update.
   */
  where: Prisma.paginasWhereUniqueInput
}

/**
 * paginas updateMany
 */
export type paginasUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update paginas.
   */
  data: Prisma.XOR<Prisma.paginasUpdateManyMutationInput, Prisma.paginasUncheckedUpdateManyInput>
  /**
   * Filter which paginas to update
   */
  where?: Prisma.paginasWhereInput
  /**
   * Limit how many paginas to update.
   */
  limit?: number
}

/**
 * paginas upsert
 */
export type paginasUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * The filter to search for the paginas to update in case it exists.
   */
  where: Prisma.paginasWhereUniqueInput
  /**
   * In case the paginas found by the `where` argument doesn't exist, create a new paginas with this data.
   */
  create: Prisma.XOR<Prisma.paginasCreateInput, Prisma.paginasUncheckedCreateInput>
  /**
   * In case the paginas was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.paginasUpdateInput, Prisma.paginasUncheckedUpdateInput>
}

/**
 * paginas delete
 */
export type paginasDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
  /**
   * Filter which paginas to delete.
   */
  where: Prisma.paginasWhereUniqueInput
}

/**
 * paginas deleteMany
 */
export type paginasDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which paginas to delete
   */
  where?: Prisma.paginasWhereInput
  /**
   * Limit how many paginas to delete.
   */
  limit?: number
}

/**
 * paginas without action
 */
export type paginasDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the paginas
   */
  select?: Prisma.paginasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the paginas
   */
  omit?: Prisma.paginasOmit<ExtArgs> | null
}
