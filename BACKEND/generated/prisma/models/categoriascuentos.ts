
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `categoriascuentos` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model categoriascuentos
 * 
 */
export type categoriascuentosModel = runtime.Types.Result.DefaultSelection<Prisma.$categoriascuentosPayload>

export type AggregateCategoriascuentos = {
  _count: CategoriascuentosCountAggregateOutputType | null
  _avg: CategoriascuentosAvgAggregateOutputType | null
  _sum: CategoriascuentosSumAggregateOutputType | null
  _min: CategoriascuentosMinAggregateOutputType | null
  _max: CategoriascuentosMaxAggregateOutputType | null
}

export type CategoriascuentosAvgAggregateOutputType = {
  idCategoria: number | null
}

export type CategoriascuentosSumAggregateOutputType = {
  idCategoria: number | null
}

export type CategoriascuentosMinAggregateOutputType = {
  idCategoria: number | null
  nombreCategoria: string | null
  descripcion: string | null
}

export type CategoriascuentosMaxAggregateOutputType = {
  idCategoria: number | null
  nombreCategoria: string | null
  descripcion: string | null
}

export type CategoriascuentosCountAggregateOutputType = {
  idCategoria: number
  nombreCategoria: number
  descripcion: number
  _all: number
}


export type CategoriascuentosAvgAggregateInputType = {
  idCategoria?: true
}

export type CategoriascuentosSumAggregateInputType = {
  idCategoria?: true
}

export type CategoriascuentosMinAggregateInputType = {
  idCategoria?: true
  nombreCategoria?: true
  descripcion?: true
}

export type CategoriascuentosMaxAggregateInputType = {
  idCategoria?: true
  nombreCategoria?: true
  descripcion?: true
}

export type CategoriascuentosCountAggregateInputType = {
  idCategoria?: true
  nombreCategoria?: true
  descripcion?: true
  _all?: true
}

export type CategoriascuentosAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which categoriascuentos to aggregate.
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of categoriascuentos to fetch.
   */
  orderBy?: Prisma.categoriascuentosOrderByWithRelationInput | Prisma.categoriascuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.categoriascuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` categoriascuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` categoriascuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned categoriascuentos
  **/
  _count?: true | CategoriascuentosCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: CategoriascuentosAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: CategoriascuentosSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: CategoriascuentosMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: CategoriascuentosMaxAggregateInputType
}

export type GetCategoriascuentosAggregateType<T extends CategoriascuentosAggregateArgs> = {
      [P in keyof T & keyof AggregateCategoriascuentos]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCategoriascuentos[P]>
    : Prisma.GetScalarType<T[P], AggregateCategoriascuentos[P]>
}




export type categoriascuentosGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.categoriascuentosWhereInput
  orderBy?: Prisma.categoriascuentosOrderByWithAggregationInput | Prisma.categoriascuentosOrderByWithAggregationInput[]
  by: Prisma.CategoriascuentosScalarFieldEnum[] | Prisma.CategoriascuentosScalarFieldEnum
  having?: Prisma.categoriascuentosScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: CategoriascuentosCountAggregateInputType | true
  _avg?: CategoriascuentosAvgAggregateInputType
  _sum?: CategoriascuentosSumAggregateInputType
  _min?: CategoriascuentosMinAggregateInputType
  _max?: CategoriascuentosMaxAggregateInputType
}

export type CategoriascuentosGroupByOutputType = {
  idCategoria: number
  nombreCategoria: string
  descripcion: string | null
  _count: CategoriascuentosCountAggregateOutputType | null
  _avg: CategoriascuentosAvgAggregateOutputType | null
  _sum: CategoriascuentosSumAggregateOutputType | null
  _min: CategoriascuentosMinAggregateOutputType | null
  _max: CategoriascuentosMaxAggregateOutputType | null
}

type GetCategoriascuentosGroupByPayload<T extends categoriascuentosGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CategoriascuentosGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof CategoriascuentosGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CategoriascuentosGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CategoriascuentosGroupByOutputType[P]>
      }
    >
  >



export type categoriascuentosWhereInput = {
  AND?: Prisma.categoriascuentosWhereInput | Prisma.categoriascuentosWhereInput[]
  OR?: Prisma.categoriascuentosWhereInput[]
  NOT?: Prisma.categoriascuentosWhereInput | Prisma.categoriascuentosWhereInput[]
  idCategoria?: Prisma.IntFilter<"categoriascuentos"> | number
  nombreCategoria?: Prisma.StringFilter<"categoriascuentos"> | string
  descripcion?: Prisma.StringNullableFilter<"categoriascuentos"> | string | null
}

export type categoriascuentosOrderByWithRelationInput = {
  idCategoria?: Prisma.SortOrder
  nombreCategoria?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.categoriascuentosOrderByRelevanceInput
}

export type categoriascuentosWhereUniqueInput = Prisma.AtLeast<{
  idCategoria?: number
  nombreCategoria?: string
  AND?: Prisma.categoriascuentosWhereInput | Prisma.categoriascuentosWhereInput[]
  OR?: Prisma.categoriascuentosWhereInput[]
  NOT?: Prisma.categoriascuentosWhereInput | Prisma.categoriascuentosWhereInput[]
  descripcion?: Prisma.StringNullableFilter<"categoriascuentos"> | string | null
}, "idCategoria" | "nombreCategoria">

export type categoriascuentosOrderByWithAggregationInput = {
  idCategoria?: Prisma.SortOrder
  nombreCategoria?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.categoriascuentosCountOrderByAggregateInput
  _avg?: Prisma.categoriascuentosAvgOrderByAggregateInput
  _max?: Prisma.categoriascuentosMaxOrderByAggregateInput
  _min?: Prisma.categoriascuentosMinOrderByAggregateInput
  _sum?: Prisma.categoriascuentosSumOrderByAggregateInput
}

export type categoriascuentosScalarWhereWithAggregatesInput = {
  AND?: Prisma.categoriascuentosScalarWhereWithAggregatesInput | Prisma.categoriascuentosScalarWhereWithAggregatesInput[]
  OR?: Prisma.categoriascuentosScalarWhereWithAggregatesInput[]
  NOT?: Prisma.categoriascuentosScalarWhereWithAggregatesInput | Prisma.categoriascuentosScalarWhereWithAggregatesInput[]
  idCategoria?: Prisma.IntWithAggregatesFilter<"categoriascuentos"> | number
  nombreCategoria?: Prisma.StringWithAggregatesFilter<"categoriascuentos"> | string
  descripcion?: Prisma.StringNullableWithAggregatesFilter<"categoriascuentos"> | string | null
}

export type categoriascuentosCreateInput = {
  nombreCategoria: string
  descripcion?: string | null
}

export type categoriascuentosUncheckedCreateInput = {
  idCategoria?: number
  nombreCategoria: string
  descripcion?: string | null
}

export type categoriascuentosUpdateInput = {
  nombreCategoria?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type categoriascuentosUncheckedUpdateInput = {
  idCategoria?: Prisma.IntFieldUpdateOperationsInput | number
  nombreCategoria?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type categoriascuentosCreateManyInput = {
  idCategoria?: number
  nombreCategoria: string
  descripcion?: string | null
}

export type categoriascuentosUpdateManyMutationInput = {
  nombreCategoria?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type categoriascuentosUncheckedUpdateManyInput = {
  idCategoria?: Prisma.IntFieldUpdateOperationsInput | number
  nombreCategoria?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type categoriascuentosOrderByRelevanceInput = {
  fields: Prisma.categoriascuentosOrderByRelevanceFieldEnum | Prisma.categoriascuentosOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type categoriascuentosCountOrderByAggregateInput = {
  idCategoria?: Prisma.SortOrder
  nombreCategoria?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
}

export type categoriascuentosAvgOrderByAggregateInput = {
  idCategoria?: Prisma.SortOrder
}

export type categoriascuentosMaxOrderByAggregateInput = {
  idCategoria?: Prisma.SortOrder
  nombreCategoria?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
}

export type categoriascuentosMinOrderByAggregateInput = {
  idCategoria?: Prisma.SortOrder
  nombreCategoria?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
}

export type categoriascuentosSumOrderByAggregateInput = {
  idCategoria?: Prisma.SortOrder
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}



export type categoriascuentosSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  idCategoria?: boolean
  nombreCategoria?: boolean
  descripcion?: boolean
}, ExtArgs["result"]["categoriascuentos"]>



export type categoriascuentosSelectScalar = {
  idCategoria?: boolean
  nombreCategoria?: boolean
  descripcion?: boolean
}

export type categoriascuentosOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"idCategoria" | "nombreCategoria" | "descripcion", ExtArgs["result"]["categoriascuentos"]>

export type $categoriascuentosPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "categoriascuentos"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    idCategoria: number
    nombreCategoria: string
    descripcion: string | null
  }, ExtArgs["result"]["categoriascuentos"]>
  composites: {}
}

export type categoriascuentosGetPayload<S extends boolean | null | undefined | categoriascuentosDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload, S>

export type categoriascuentosCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<categoriascuentosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: CategoriascuentosCountAggregateInputType | true
  }

export interface categoriascuentosDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categoriascuentos'], meta: { name: 'categoriascuentos' } }
  /**
   * Find zero or one Categoriascuentos that matches the filter.
   * @param {categoriascuentosFindUniqueArgs} args - Arguments to find a Categoriascuentos
   * @example
   * // Get one Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends categoriascuentosFindUniqueArgs>(args: Prisma.SelectSubset<T, categoriascuentosFindUniqueArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Categoriascuentos that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {categoriascuentosFindUniqueOrThrowArgs} args - Arguments to find a Categoriascuentos
   * @example
   * // Get one Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends categoriascuentosFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, categoriascuentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Categoriascuentos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosFindFirstArgs} args - Arguments to find a Categoriascuentos
   * @example
   * // Get one Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends categoriascuentosFindFirstArgs>(args?: Prisma.SelectSubset<T, categoriascuentosFindFirstArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Categoriascuentos that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosFindFirstOrThrowArgs} args - Arguments to find a Categoriascuentos
   * @example
   * // Get one Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends categoriascuentosFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, categoriascuentosFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Categoriascuentos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findMany()
   * 
   * // Get first 10 Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.findMany({ take: 10 })
   * 
   * // Only select the `idCategoria`
   * const categoriascuentosWithIdCategoriaOnly = await prisma.categoriascuentos.findMany({ select: { idCategoria: true } })
   * 
   */
  findMany<T extends categoriascuentosFindManyArgs>(args?: Prisma.SelectSubset<T, categoriascuentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Categoriascuentos.
   * @param {categoriascuentosCreateArgs} args - Arguments to create a Categoriascuentos.
   * @example
   * // Create one Categoriascuentos
   * const Categoriascuentos = await prisma.categoriascuentos.create({
   *   data: {
   *     // ... data to create a Categoriascuentos
   *   }
   * })
   * 
   */
  create<T extends categoriascuentosCreateArgs>(args: Prisma.SelectSubset<T, categoriascuentosCreateArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Categoriascuentos.
   * @param {categoriascuentosCreateManyArgs} args - Arguments to create many Categoriascuentos.
   * @example
   * // Create many Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends categoriascuentosCreateManyArgs>(args?: Prisma.SelectSubset<T, categoriascuentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Categoriascuentos.
   * @param {categoriascuentosDeleteArgs} args - Arguments to delete one Categoriascuentos.
   * @example
   * // Delete one Categoriascuentos
   * const Categoriascuentos = await prisma.categoriascuentos.delete({
   *   where: {
   *     // ... filter to delete one Categoriascuentos
   *   }
   * })
   * 
   */
  delete<T extends categoriascuentosDeleteArgs>(args: Prisma.SelectSubset<T, categoriascuentosDeleteArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Categoriascuentos.
   * @param {categoriascuentosUpdateArgs} args - Arguments to update one Categoriascuentos.
   * @example
   * // Update one Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends categoriascuentosUpdateArgs>(args: Prisma.SelectSubset<T, categoriascuentosUpdateArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Categoriascuentos.
   * @param {categoriascuentosDeleteManyArgs} args - Arguments to filter Categoriascuentos to delete.
   * @example
   * // Delete a few Categoriascuentos
   * const { count } = await prisma.categoriascuentos.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends categoriascuentosDeleteManyArgs>(args?: Prisma.SelectSubset<T, categoriascuentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Categoriascuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends categoriascuentosUpdateManyArgs>(args: Prisma.SelectSubset<T, categoriascuentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Categoriascuentos.
   * @param {categoriascuentosUpsertArgs} args - Arguments to update or create a Categoriascuentos.
   * @example
   * // Update or create a Categoriascuentos
   * const categoriascuentos = await prisma.categoriascuentos.upsert({
   *   create: {
   *     // ... data to create a Categoriascuentos
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Categoriascuentos we want to update
   *   }
   * })
   */
  upsert<T extends categoriascuentosUpsertArgs>(args: Prisma.SelectSubset<T, categoriascuentosUpsertArgs<ExtArgs>>): Prisma.Prisma__categoriascuentosClient<runtime.Types.Result.GetResult<Prisma.$categoriascuentosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Categoriascuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosCountArgs} args - Arguments to filter Categoriascuentos to count.
   * @example
   * // Count the number of Categoriascuentos
   * const count = await prisma.categoriascuentos.count({
   *   where: {
   *     // ... the filter for the Categoriascuentos we want to count
   *   }
   * })
  **/
  count<T extends categoriascuentosCountArgs>(
    args?: Prisma.Subset<T, categoriascuentosCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], CategoriascuentosCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Categoriascuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CategoriascuentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends CategoriascuentosAggregateArgs>(args: Prisma.Subset<T, CategoriascuentosAggregateArgs>): Prisma.PrismaPromise<GetCategoriascuentosAggregateType<T>>

  /**
   * Group by Categoriascuentos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {categoriascuentosGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends categoriascuentosGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: categoriascuentosGroupByArgs['orderBy'] }
      : { orderBy?: categoriascuentosGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, categoriascuentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriascuentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the categoriascuentos model
 */
readonly fields: categoriascuentosFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for categoriascuentos.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__categoriascuentosClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the categoriascuentos model
 */
export interface categoriascuentosFieldRefs {
  readonly idCategoria: Prisma.FieldRef<"categoriascuentos", 'Int'>
  readonly nombreCategoria: Prisma.FieldRef<"categoriascuentos", 'String'>
  readonly descripcion: Prisma.FieldRef<"categoriascuentos", 'String'>
}
    

// Custom InputTypes
/**
 * categoriascuentos findUnique
 */
export type categoriascuentosFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter, which categoriascuentos to fetch.
   */
  where: Prisma.categoriascuentosWhereUniqueInput
}

/**
 * categoriascuentos findUniqueOrThrow
 */
export type categoriascuentosFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter, which categoriascuentos to fetch.
   */
  where: Prisma.categoriascuentosWhereUniqueInput
}

/**
 * categoriascuentos findFirst
 */
export type categoriascuentosFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter, which categoriascuentos to fetch.
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of categoriascuentos to fetch.
   */
  orderBy?: Prisma.categoriascuentosOrderByWithRelationInput | Prisma.categoriascuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for categoriascuentos.
   */
  cursor?: Prisma.categoriascuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` categoriascuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` categoriascuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of categoriascuentos.
   */
  distinct?: Prisma.CategoriascuentosScalarFieldEnum | Prisma.CategoriascuentosScalarFieldEnum[]
}

/**
 * categoriascuentos findFirstOrThrow
 */
export type categoriascuentosFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter, which categoriascuentos to fetch.
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of categoriascuentos to fetch.
   */
  orderBy?: Prisma.categoriascuentosOrderByWithRelationInput | Prisma.categoriascuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for categoriascuentos.
   */
  cursor?: Prisma.categoriascuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` categoriascuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` categoriascuentos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of categoriascuentos.
   */
  distinct?: Prisma.CategoriascuentosScalarFieldEnum | Prisma.CategoriascuentosScalarFieldEnum[]
}

/**
 * categoriascuentos findMany
 */
export type categoriascuentosFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter, which categoriascuentos to fetch.
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of categoriascuentos to fetch.
   */
  orderBy?: Prisma.categoriascuentosOrderByWithRelationInput | Prisma.categoriascuentosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing categoriascuentos.
   */
  cursor?: Prisma.categoriascuentosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` categoriascuentos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` categoriascuentos.
   */
  skip?: number
  distinct?: Prisma.CategoriascuentosScalarFieldEnum | Prisma.CategoriascuentosScalarFieldEnum[]
}

/**
 * categoriascuentos create
 */
export type categoriascuentosCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * The data needed to create a categoriascuentos.
   */
  data: Prisma.XOR<Prisma.categoriascuentosCreateInput, Prisma.categoriascuentosUncheckedCreateInput>
}

/**
 * categoriascuentos createMany
 */
export type categoriascuentosCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many categoriascuentos.
   */
  data: Prisma.categoriascuentosCreateManyInput | Prisma.categoriascuentosCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * categoriascuentos update
 */
export type categoriascuentosUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * The data needed to update a categoriascuentos.
   */
  data: Prisma.XOR<Prisma.categoriascuentosUpdateInput, Prisma.categoriascuentosUncheckedUpdateInput>
  /**
   * Choose, which categoriascuentos to update.
   */
  where: Prisma.categoriascuentosWhereUniqueInput
}

/**
 * categoriascuentos updateMany
 */
export type categoriascuentosUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update categoriascuentos.
   */
  data: Prisma.XOR<Prisma.categoriascuentosUpdateManyMutationInput, Prisma.categoriascuentosUncheckedUpdateManyInput>
  /**
   * Filter which categoriascuentos to update
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * Limit how many categoriascuentos to update.
   */
  limit?: number
}

/**
 * categoriascuentos upsert
 */
export type categoriascuentosUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * The filter to search for the categoriascuentos to update in case it exists.
   */
  where: Prisma.categoriascuentosWhereUniqueInput
  /**
   * In case the categoriascuentos found by the `where` argument doesn't exist, create a new categoriascuentos with this data.
   */
  create: Prisma.XOR<Prisma.categoriascuentosCreateInput, Prisma.categoriascuentosUncheckedCreateInput>
  /**
   * In case the categoriascuentos was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.categoriascuentosUpdateInput, Prisma.categoriascuentosUncheckedUpdateInput>
}

/**
 * categoriascuentos delete
 */
export type categoriascuentosDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
  /**
   * Filter which categoriascuentos to delete.
   */
  where: Prisma.categoriascuentosWhereUniqueInput
}

/**
 * categoriascuentos deleteMany
 */
export type categoriascuentosDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which categoriascuentos to delete
   */
  where?: Prisma.categoriascuentosWhereInput
  /**
   * Limit how many categoriascuentos to delete.
   */
  limit?: number
}

/**
 * categoriascuentos without action
 */
export type categoriascuentosDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categoriascuentos
   */
  select?: Prisma.categoriascuentosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categoriascuentos
   */
  omit?: Prisma.categoriascuentosOmit<ExtArgs> | null
}
